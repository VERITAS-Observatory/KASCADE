#!/bin/bash
#$0 ./kas02.scr
#$1 For ksall and ksallVBF:
#     Telescope-Type-direction specification code. like: WP1Deg,WHe4_1Deg,
#     WG1Deg,VG1DegN0.5Deg.  Giveing a Type code of 'WCR1Deg will cause both 
#     WP1Deg  and WHe4_1Deg to be  run
#   For ksaomVBF and ksarraytriggerVBF:
#     append the threshold specifier: VG1Deg50mv, VG1DegN0.5Deg70mv, 
#     WCR20DegS0.3Deg50mv.
#   For ksallVBF: 
#     Like VG20Deg2D50mv1234M2
#$2 has which script to run: 
#               ksall:make showers throuth te files
#               ksaom:makes .root files(depreciated)
#               ksaomVBF:makes .vbf files
#               ksaomVBFRoot:makes .vbf and .root files(depreciated)
#               ksarraytriggerVBF:makes .vbf multi trigger files.
#               ksMissingVBF:Looks for missing VBF files.
#               ksMissingTE:Looks for missing TE files.
#               ksallVBF: All Singing all dancing: ksKascade to ksArrayTrigger
#*****************************************************************
#Functions to define thigs for various particle specs

function Protons()
#**********************************************************************
#Veritas Protons
#**********************************************************************
{
    echo Protons: $parspec
    WALLTIME=75:00:00
#Veritas$ whipple set1/ksaom/kasall
    let processEnd=42
############       1    2    3    4    5    6    7    8    9    10  11    12  13  14    15    16    17   18  19  20  21  22  23   24   25   26   27   28   29   30   31   32   33   34   35   36    37    38    39    40    41    42    43    44
    enableGEN=([1]=ON   ON   ON   ON   ON   ON   ON   ON   ON   ON  ON    ON  ON  ON    ON    ON    ON   ON  ON  ON  ON  ON  ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON    ON    ON    ON    ON    ON    ON  )
       energy=([1]=20   23.9 28.6 34.2 40.9 48.9 58.5 69.9 83.6 100 119.6 143 171 204.5 244.5 292.4 350  418 500 598 715 855 1022 1223 1462 1748 2091 2500 2990 3575 4275 5112 6113 7310 8741 10453 12500 14948 17875 21375 25560 30565)
        start=([1]=1    1    1    1    1    1    1    1    1    1   1     1   1   1     1     1     1    1   1   1   1   1   1    1    1    1    1    1    1    1    1    1    1    1    1    1     1     1     1     1     1     1)
          end=([1]=1382 1007 734  535  390  284  207  151  110  80  59    43  31  23    17    12    9    7   5   5   5   5   5    5    5    5    5    5    5    5    5    5    5    5    5    5     5     5     5     5     5     5)

#10%
#          end=([1]=139  101  74   54   39   29   21   16   11   8   6     5   4   3     2     2     1    1   1   1   1   1   1    1    1    1    1    1    1    1    1    1    1    1    1    1     1     1     1     1     1     1)

#VeritasSet2
#    enableGEN=([1]=ON   ON   ON   ON   ON   ON   ON   ON   ON   ON    ON    ON    ON  ON    ON    ON    ON   ON  ON  ON  ON  ON  ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON    ON    ON    ON    ON    ON    ON )
#       energy=([1]=21.9 26.2 31.3 37.4 44.7 53.5 64.0 76.5 91.5 109.4 130.8 156.4 187 223.6 267.4 319.8 382  457 547 654 782 935 1118 1337 1599 1912 2286 2734 3269 3909 4675 5590 6685 7994 9559 11431 13669 16346 19546 23374 27951 33424)
#        start=([1]=1    1    1    1    1    1    1    1    1    1     1     1     1   1     1     1     1    1   1   1   1   1   1    1    1    1    1    1    1    1    1    1    1    1    1    1     1     1     1     1     1     1)
#          end=([1]=1180 860  627  457  333  243  177  129  94   69    50    37    27  20    15    11    8    6   5   5   5   5   5    5    5    5    5    5    5    5    5    5    5    5    5    5     5     5     5     5     5     5)

    if [ $host = $ISIS ]; then
      if [ "$kssc" != "ksMissingVBF" ] && [ "$kssc" != "ksMissingTE" ]; then
#ksaomVBF ~12hr.
#	BuildIsisScriptList 1 1 2
#	BuildIsisScriptList 2 3 4
#	BuildIsisScriptList 3 5 6
#	BuildIsisScriptList 4 7 9
#	BuildIsisScriptList 5 10 14
#	BuildIsisScriptList 6 15 20
#	BuildIsisScriptList 7 21 31
#	BuildIsisScriptList 8 32 34

	BuildIsisScriptList 1 1 10
	BuildIsisScriptList 2 11 20
	BuildIsisScriptList 3 21 25
	BuildIsisScriptList 4 26 32
	BuildIsisScriptList 5 33 37
	BuildIsisScriptList 6 38 42

#For High ksall ~ 5hrs
#           BuildIsisScriptList 1 35 35
#	    BuildIsisScriptList 2 36 36
#	    BuildIsisScriptList 3 37 37
#	    BuildIsisScriptList 4 38 38
#	    BuildIsisScriptList 5 39 39
#	    BuildIsisScriptList 6 40 40
#	    BuildIsisScriptList 7 41 41
#	    BuildIsisScriptList 8 42 42
 
      else
	BuildIsisScriptList 1  1  $processEnd
      fi
    fi

#VeritasA
    if [ $host = $VERITASA ]; then
      if [ "$kssc" != "ksMissingVBF" ] && [ "$kssc" != "ksMissingTE" ]; then
	BuildVeritasAScriptList 1 1 10
	BuildVeritasAScriptList 2 11 20
	BuildVeritasAScriptList 3 21 25
	BuildVeritasAScriptList 4 26 32
	BuildVeritasAScriptList 5 33 37
	BuildVeritasAScriptList 6 38 42

      else
	BuildVeritasScriptList 1  1  $processEnd
      fi
    fi

#AMDAHL
    if [ $host = $AMDAHL ]; then
	SubmitAmdahlPBSScripts 1 42
    fi
}
#**********************************************************************


function Helium4()
#**********************************************************************
#Veritas  and whipple Helium4
#**********************************************************************
{
    echo Helium4: $parspec
    WALLTIME=50:00:00

#Veritas$ whipple set1/ksaom/kasall
    let processEnd=42
############       1    2    3    4    5    6    7    8    9    10  11    12  13  14    15    16    17   18  19  20  21  22  23   24   25   26   27   28   29   30   31   32   33   34   35   36    37    38    39    40    41    42    43    44
    enableGEN=([1]=ON   ON   ON   ON   ON   ON   ON   ON   ON   ON  ON    ON  ON  ON    ON    ON    ON   ON  ON  ON  ON  ON  ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON    ON    ON    ON    ON    ON    ON  )
       energy=([1]=20   23.9 28.6 34.2 40.9 48.9 58.5 69.9 83.6 100 119.6 143 171 204.5 244.5 292.4 350  418 500 598 715 855 1022 1223 1462 1748 2091 2500 2990 3575 4275 5112 6113 7310 8741 10453 12500 14948 17875 21375 25560 30565)
        start=([1]=1    1    1    1    1    1    1    1    1    1   1     1   1   1     1     1     1    1   1   1   1   1   1    1    1    1    1    1    1    1    1    1    1    1    1    1     1     1     1     1     1     1)
          end=([1]=519  387  289  215  161  120  90   67   50   37  28    21  16  12    9     7     5    5   5   5   5   5   5    5    5    5    5    5    5    5    5    5    5    5    5    5     5     5     5     5     5     5)

#10%
#          end=([1]=52   39   29   22   17   12   9    7    5    4   3     3   2   2     1     1     1    1   1   1   1   1   1    1    1    1    1    1    1    1    1    1    1    1    1    1     1     1     1     1     1     1)  

#VeritasSet2
#    enableGEN=([1]=ON   ON   ON   ON   ON   ON   ON   ON   ON   ON    ON    ON    ON  ON    ON    ON    ON   ON  ON  ON  ON  ON  ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON    ON    ON    ON    ON    ON    ON )
#       energy=([1]=21.9 26.2 31.3 37.4 44.7 53.5 64.0 76.5 91.5 109.4 130.8 156.4 187 223.6 267.4 319.8 382  457 547 654 782 935 1118 1337 1599 1912 2286 2734 3269 3909 4675 5590 6685 7994 9559 11431 13669 16346 19546 23374 27951 33424)
#        start=([1]=1    1    1    1    1    1    1    1    1    1     1     1     1   1     1     1     1    1   1   1   1   1   1    1    1    1    1    1    1    1    1    1    1    1    1    1     1     1     1     1     1     1)
#          end=([1]=448  334  249  186  139  104  78   58   43   32    24    18    14  10    8     6     5    5   5   5   5   5   5    5    5    5    5    5    5    5    5    5    5    5    5    5     5     5     5     5     5     5)

    if [ $host = $ISIS ]; then
      if [ "$kssc" != "ksMissingVBF" ] && [ "$kssc" != "ksMissingTE" ]; then

#set 1 kasaomVBF ~5 hr.
#	BuildIsisScriptList 1 6  12
#	BuildIsisScriptList 2 13 17
#	BuildIsisScriptList 3 18 24
#	BuildIsisScriptList 4 25 27
#	BuildIsisScriptList 5 28 30
#	BuildIsisScriptList 6 31 32
#	BuildIsisScriptList 7 33 33
#	BuildIsisScriptList 8 34 34

	BuildIsisScriptList 1 6  20
	BuildIsisScriptList 2 21 30
	BuildIsisScriptList 3 31 36
	BuildIsisScriptList 4 37 39
	BuildIsisScriptList 5 40 41
	BuildIsisScriptList 6 42 42

#For High ksall ~ 5hrs
#           BuildIsisScriptList 1 35 35
#	    BuildIsisScriptList 2 36 36
#	    BuildIsisScriptList 3 37 37
#	    BuildIsisScriptList 4 38 38
#	    BuildIsisScriptList 5 39 39
#	    BuildIsisScriptList 6 40 40
#	    BuildIsisScriptList 7 41 41
#	    BuildIsisScriptList 8 42 42

      else
	BuildIsisScriptList 1 1  $processEnd
      fi
    fi

#VeritasA
    if [ $host = $VERITASA ]; then
      if [ "$kssc" != "ksMissingVBF" ] && [ "$kssc" != "ksMissingTE" ]; then

	BuildVeritasAScriptList 1 6  20
	BuildVeritasAScriptList 2 21 30
	BuildVeritasAScriptList 3 31 36
	BuildVertiasAScriptList 4 37 39
	BuildVeritasAScriptList 5 40 41
	BuildVeritasAScriptList 6 42 42
      else
	BuildVeritasAScriptList 1 1  $processEnd
      fi
    fi

    if [ $host = $AMDAHL ]; then
        SubmitAmdahlPBSScripts 1 42 
    fi
}
#**********************************************************************

function Gammas()
#**********************************************************************
#Gammas
#**********************************************************************
{
    echo Gammas: $parspec
    WALLTIME=75:00:00

#Veritas set1/ksaom/kasall
#Whipple set1/kasaom/kasall starts at 84 GeV
    let processEnd=42
############       1    2    3    4    5    6    7    8    9    10  11    12  13  14    15    16    17   18  19  20  21  22  23   24   25   26   27   28   29   30   31   32   33   34   35   36    37    38    39    40    41    42    43    44
    enableGEN=([1]=ON   ON   ON   ON   ON   ON   ON   ON   ON   ON  ON    ON  ON  ON    ON    ON    ON   ON  ON  ON  ON  ON  ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON    ON    ON    ON    ON    ON    ON    ON    ON )
       energy=([1]=20   23.9 28.6 34.2 40.9 48.9 58.5 69.9 83.6 100 119.6 143 171 204.5 244.5 292.4 350  418 500 598 715 855 1022 1223 1462 1748 2091 2500 2990 3575 4275 5112 6113 7310 8741 10453 12500 14948 17875 21375 25560 25560 30565 30565)
        start=([1]=1    1    1    1    1    1    1    1    1    1   1     1   1   1     1     1     1    1   1   1   1   1   1    1    1    1    1    1    1    1    1    1    1    1    1    1     1     1     1     1     1     6     1     6) 
          end=([1]=1032 796  615  474  366  283  218  168  130  100 78    60  46  36    28    22    17   13  10  10  10  10  10   10   10   10   10   10   10   10   10   10   10   10   10   10    10    10    10    10    5     10    5     10)

#VeritasSet2
#    enableGEN=([1]=ON   ON   ON   ON   ON   ON   ON   ON   ON   ON    ON    ON    ON  ON    ON    ON    ON   ON  ON  ON  ON  ON  ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON    ON    ON    ON    ON    ON    ON )
#       energy=([1]=21.9 26.2 31.3 37.4 44.7 53.5 64.0 76.5 91.5 109.4 130.8 156.4 187 223.6 267.4 319.8 382  457 547 654 782 935 1118 1337 1599 1912 2286 2734 3269 3909 4675 5590 6685 7994 9559 11430 13669 16346 19546 23374 27951 33424)
#        start=([1]=1    1    1    1    1    1    1    1    1    1     1     1     1   1     1     1     1    1   1   1   1   1   1    1    1    1    1    1    1    1    1    1    1    1    1    1     1     1     1     1     1     1)
#          end=([1]=907  700  540  417  322  248  192  148  114  88    68    53    41  32    25    19    15   12  9   7   6   5   5    5    5    5    5    5    5    5    5    5    5    5    5    5     5     5     5     5     5     5)

    if [ $host = $ISIS ]; then
	if [ ${jobSpec:0:1} = "W" ] ; then
          if [ "$kssc" != "ksMissingVBF" ] && [ "$kssc" != "ksMissingTE" ]; then
	    BuildIsisScriptList 1 11 12
	    BuildIsisScriptList 2 13 14
	    BuildIsisScriptList 3 15 16
	    BuildIsisScriptList 4 17 18
	    BuildIsisScriptList 5 19 20
	    BuildIsisScriptList 6 21 23
	    BuildIsisScriptList 7 24 26
	    BuildIsisScriptList 8 27 28
          else
	    BuildIsisScriptList 1 1  $processEnd
          fi
	fi
	if [ ${jobSpec:0:1} = "V" ] ; then
          if [ "$kssc" != "ksMissingVBF" ] && [ "$kssc" != "ksMissingTE" ]; then
	   #For ksaomVBF ~1:20 
#             For ksallVBF: set 1 about 24 hours <=10 TeV
	    BuildIsisScriptList 1 1  4
	    BuildIsisScriptList 2 5  9
	    BuildIsisScriptList 3 10 15
	    BuildIsisScriptList 4 16 24
	    BuildIsisScriptList 5 25 32
	    BuildIsisScriptList 6 33 34
	    BuildIsisScriptList 7 35 35
	    BuildIsisScriptList 8 36 36

# High >10 TeV 48 hrs?
#	    BuildIsisScriptList 1 37  37
#	    BuildIsisScriptList 2 38  38
#	    BuildIsisScriptList 3 39  39
#	    BuildIsisScriptList 4 40  40
#	    BuildIsisScriptList 5 41  41
#	    BuildIsisScriptList 6 42  42
#	    BuildIsisScriptList 7 43  43
#	    BuildIsisScriptList 8 44  44

          else
	    BuildIsisScriptList 1 1  $processEnd
          fi
	fi
    fi

#VeritasA
    if [ $host = $VERITASA ]; then
	if [ ${jobSpec:0:1} = "W" ] ; then
          if [ "$kssc" != "ksMissingVBF" ] && [ "$kssc" != "ksMissingTE" ]; then
	    BuildVeritasAScriptList 1 11 12
	    BuildVeritasAScriptList 2 13 14
	    BuildVeritasAScriptList 3 15 16
	    BuildVeritasAScriptList 4 17 18
	    BuildVeritasAScriptList 5 19 20
	    BuildVeritasAScriptList 6 21 23
	    BuildVeritasAScriptList 7 24 26
	    BuildVeritasAScriptList 8 27 28
          else
	    BuildVeritasAScriptList 1 1  $processEnd
          fi
	fi
	if [ ${jobSpec:0:1} = "V" ] ; then
          if [ "$kssc" != "ksMissingVBF" ] && [ "$kssc" != "ksMissingTE" ]; then
	    BuildVeritasAScriptList 1 1  9 
	    BuildVeritasAScriptList 2 10 19
	    BuildVeritasAScriptList 3 20 30
	    BuildVeritasAScriptList 4 31 36
	    BuildVeritasAScriptList 5 37 38
	    BuildVeritasAScriptList 6 39 39
	    BuildVeritasAScriptList 7 40 40
	    BuildVeritasAScriptList 8 41 42

          else
	    BuildVeritasAScriptList 1 1  $processEnd
          fi
	fi
    fi

#AMDAHL
    if [ $host = $AMDAHL ]; then
     SubmitAmdahlPBSScripts 35 42 
	SubmitAmdahlPBSScripts 23 34 
	SubmitAmdahlPBSScripts 1  22 
    fi
}


function SubmitAmdahlPBSScripts()
#**********************************************************************
# Cause pbs jobs to be submitted.
#**********************************************************************
{
 pr=$parspec
 sub=${pr%%mv*}mv
 let processStart=$1
 let processEnd=$2
 let i=$processStart

 while test $i -le $processEnd
 do
      echo Entry: $i  ${enableGEN[$i]} ${energy[$i]} ${start[$i]} ${end[$i]} ${queues[$i]}

      pbsFile=$lcl/ks_$i$jobSpec.pbs
      echo "#"PBS -N 'pbs_'$sub'_'$i                                 >$pbsFile
      echo "#"PBS -e 'pbs_'$sub'_'$i'.err'                          >>$pbsFile
      echo "#"PBS -o 'pbs_'$sub'_'$i'.log'                          >>$pbsFile
      echo "#"PBS -m ae                                             >>$pbsFile
      echo "#"PBS -M $user"@purdue.edu"                             >>$pbsFile
      echo "#"PBS -q ${queues[$i]}                                  >>$pbsFile
      echo "#"PBS -l mem=$maxMem                                    >>$pbsFile
      echo "#"PBS -l walltime=$WALLTIME                             >>$pbsFile
      echo "#"PBS -l nodes=1                                        >>$pbsFile
      echo $ksScript ${energy[$i]} $parspec  ${start[$i]} \\        >>$pbsFile
      echo ${end[$i]} $datadir $workingDir                \\        >>$pbsFile
      echo ">>"$lcl"/ksProduction_"$i"_"$pr".log"                   >>$pbsFile
      qsub $pbsFile
      i=$((i+1))			#do next process
 done
}

function BuildIsisScriptList()
#**********************************************************************
# Causes sub-script list to be created and run
#**********************************************************************
{
 pr=$parspec
 jobScript=$lcl'/js'$1'_'$jobSpec'.scr'
 let processStart=$2
 let processEnd=$3
 let i=$processStart

 while test $i -le $processEnd
 do
    if [ "$kssc" != "ksMissingVBF" ] && [ "$kssc" != "ksMissingTE" ]; then
	logFile=">>"$lcl"/ksProduction_"$i"_"$pr".log"
    else
	logFile=' '
    fi
    echo Entry: $i  ${enableGEN[$i]} ${energy[$i]} ${start[$i]} ${end[$i]}
    if [ "${enableGEN[$i]}" == "ON" ]; then 
      echo $ksScript ${energy[$i]} $parspec  ${start[$i]} \\   >>$jobScript
      echo ${end[$i]} $datadir $workingDir                \\   >>$jobScript
      echo $logFile                                            >>$jobScript
    fi
    i=$((i+1))			#do next process
 done
}


function BuildVeritasAScriptList()
#**********************************************************************
# Causes sub-script list to be created and run
#**********************************************************************
{
 pr=$parspec
 jobScript=$lcl'/js'$1'_'$jobSpec'.scr'
 let processStart=$2
 let processEnd=$3
 let i=$processStart

 while test $i -le $processEnd
 do
    if [ "$kssc" != "ksMissingVBF" ] && [ "$kssc" != "ksMissingTE" ]; then
	logFile=">>"$lcl"/ksProduction_"$i"_"$pr".log"
    else
	logFile=' '
    fi
    echo Entry: $i  ${enableGEN[$i]} ${energy[$i]} ${start[$i]} ${end[$i]}
 
    if [ "${enableGEN[$i]}" == "ON" ]; then 
      echo $ksScript ${energy[$i]} $parspec  ${start[$i]} \\   >>$jobScript
      echo ${end[$i]} $datadir $workingDir                \\   >>$jobScript
      echo $logFile                                            >>$jobScript
      jobUsed[$1]=YES

    fi
    i=$((i+1))			#do next process
 done
}

# ************************************************************************

#*************************************************************
#Start of main script.
#*************************************************************
lcl="$PWD"
host=$(hostname)


#script directory
sdr=$KASCADEBASE"/scripts"
ksscpt=$2
            #Assume local copy of script
kssc=${ksscpt##*/}
if test "$kssc" = "$ksscpt"
then
  #ksScript=$sdr'/'$kssc'.scr' #ksall: Makes seg,pe,pes,te files. Keeps te files
  ksScript=$lcl'/'$kssc'.scr' #ksall: Makes seg,pe,pes,te files. Keeps te files
                          #ksaom: Makes .root  files from te files(depreciated)
                          #ksaomVBF: Makes .vbf files from te files
                          #ksarraytriggerVBF: Makes array  .vbf files
                          #ksallVBF:Does everything from ksKascade to 
                          #         ksArrayTrigger
else
    ksScript=$ksscpt'.scr'
fi
echo ksScript: $ksScript
echo kssc: $kssc

let lastJob=8
if [ "$kssc" = "ksMissingVBF" ] || [ "$kssc" = "ksMissingTE" ]; then
    let lastJob=1
fi

AMDAHL=amdahl.physics.purdue.edu
ISIS=isis.depauw.edu
VERITASA=analysis

if [ $host = $ISIS ] ; then
    if test ${lcl:1:4} = "disk"
    then
       dataDirBase=${lcl:0:6}'/simulations'
    else
       dataDirBase=/simulations
    fi

    workingDir=$lcl

    let jobNum=1
    while test $jobNum -le $lastJob
    do
	    #define job script name
	JobScript=$lcl'/js'$jobNum'_'$1'.scr'
	    #Initialze the script files
	echo echo Starting $JobScript >$JobScript
    jobNum=$((jobNum+1))
    done
fi

if [ $host = $VERITASA ] ; then
    dataDirBase=/usr/local/data/sembrosk/simulations
    workingDir=/tmp/sembrosk/
    nID=([1]=0 3 4 0 1 1 2 2 3 4 5 5 )
    #Initialze all the possible script files
    let jobNum=1
    while test $jobNum -le $lastJob
    do
	    #define job script name
	JobScript=$lcl'/js'$jobNum'_'$1'.scr'
        echo "#"!/bin/bash                                  >$JobScript
        echo "#$" '-S /bin/bash'                           >>$JobScript
        echo "#$" '-N js'$jobNum'_'$1                      >>$JobScript
        echo "#$" '-l '\"'arch=lx24-amd64'\"               >>$JobScript
        echo "#$" '-l '\"'hostname=node0'${nID[$jobNum]}\" >>$JobScript
        echo "#$" '-wd /usr/local/data/sembrosk/veritas'   >>$JobScript
	echo source /etc/bashrc                            >>$JobScript
        echo source /etc/profile                           >>$JobScript
        echo source /home/sembrosk/.bashrc                 >>$JobScript
	echo echo Starting $JobScript                      >>$JobScript
	jobsUsed[$jobNum]=NO

        jobNum=$((jobNum+1))
    done
fi
if [ $host = $AMDAHL ] ; then
    dataDirBase=/project/veritas/sembrosk/simulations
    workingDir=$lcl
fi

user=$USER

#Specify queues
queues=([1]=workq workq workq workq workq workq workq workq workq workq workq  workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq  workq workq workq workq)

#queues=([1]=astro workq astro workq astro workq astro workq astro workq astro  workq astro workq astro workq astro workq astro workq astro workq astro workq  astro workq astro workq astro workq astro workq astro workq astro astro workq astro workq astro workq astro workq astro workq astro workq astro workq astro )

#queues=([1]=astro astro astro astro astro astro astro astro astro astro astro  astro astro astro astro astro astro astro astro astro astro astro astro astro  astro astro astro astro astro astro astro astro astro astro astro astro astro astro astro astro astro astro astro astro astro astro  astro astro astro astro )

#queues=([1]=astro astro workq astro astro workq astro astro workq astro astro  workq astro astro workq astro astro workq astro astro workq astro astro workq astro astro workq astro astro workq astro astro workq astro astro astro astro workq astro astro workq astro astro workq astro astro  workq astro astro workq astro )


#Fuctions specify which nodes are to be used ("on" or "off")
#Funtions also specify the energy and specify the starting and ending shower 
#IDs.
#See bottom for numbers and energies for gammas,protons and he4

#******************************************************************************
# Set up arrays for node submission and submit
#*****************************************************************************
let pspecset=0
maxMem=240MB
WALLTIME=20:00:00
jobSpec=$1

if [ ${jobSpec:0:1} = "W" ]; then
   dataDirBase=$dataDirBase'/whipple'
fi

if [ ${jobSpec:0:1} = "V" ]; then
   dataDirBase=$dataDirBase'/veritas'
fi

if [ ${jobSpec:1:2} = "CR" ]; then      # Only true for  ksaomVBF 
                                        # and ksarraytriggerVBF
    TelSpec=${jobSpec:0:1}              #gets W from WG20DegN0.5Deg50mv
    spec=${jobSpec#*CR}      #gets 20DegN0.3Deg50mv from WCR20DegN0.3Deg50mv
    let processStart=1
    parspec=$TelSpec'P'$spec #gives WP20DegN0.3Deg50mv from WCR20DegN0.3Deg50mv

    datadir="$dataDirBase/protons"
    Protons
    parspec=$TelSpec'He4_'$spec
    datadir="$dataDirBase/he4"
    Helium4
    let pspecset=1;
fi

if [ ${jobSpec:1:1} = "P" ] ; then 
    parspec=$1 
    datadir="$dataDirBase/protons"

    let processStart=1
    Protons
    let pspecset=1;
fi

if [ ${jobSpec:1:4} = "He4_" ] ; then 
    parspec=$1 
    datadir="$dataDirBase/he4"

    let processStart=1
    Helium4
    let pspecset=1;
fi

if [ ${jobSpec:1:1} = "G" ]; then
    parspec=$1
    datadir="$dataDirBase/gammas"
    let processStart=1
    Gammas
    let pspecset=1;
fi

echo datadir $datadir

if [ $pspecset -ne 1 ]; then
    echo No such Particle spec: $1
    exit
fi

#ISIS
if [ $host = $ISIS ]; then
   
    let jobNum=1
    while test $jobNum -le $lastJob
    do
	    #define job script name
	JobScript=$lcl'/js'$jobNum'_'$jobSpec'.scr'
	if [ "$kssc" != "ksMissingVBF" ] && [ "$kssc" != "ksMissingTE" ]; then
	    JobScriptLog=$lcl'/js'$jobNum'_'$jobSpec'.log'
	    #Initialze the script files
	    chmod 777 $JobScript
	    $JobScript  >$JobScriptLog &
	else
	    #Initialze the script files
	    chmod 777 $JobScript
	    $JobScript 
	fi
    jobNum=$((jobNum+1))
    done
fi

#VeritasA
if [ $host = $VERITASA ]; then

    let jobNum=1
    while test $jobNum -le $lastJob
    do
	if [ "${jobUsed[$jobNum]}" == "YES" ]; then
                #define job script name
	  JobScript=$lcl'/js'$jobNum'_'$jobSpec'.scr'
	  if [ "$kssc" != "ksMissingVBF" ] && [ "$kssc" != "ksMissingTE" ]; then
	    JobScriptLog=$lcl'/js'$jobNum'_'$jobSpec'.log'
	    #Initialze the script files
	    chmod 777 $JobScript
	
	    qsub $JobScript  >$JobScriptLog &
	  else
	    #Run the script files
	    chmod 777 $JobScript
	    qsub $JobScript
 
	  fi
       fi
    jobNum=$((jobNum+1))
    done
fi

#Nothing for AMDAHL






###########################################################################
#Arguments for ksScript
#$1 primary Energy in GeV (integer only)
#$2 Shower type specification string (To be included in config file names and 
#                              in shower names:Like P1W,G1W, He4_1W, G20N0.3V)
#$3 Lowest flie id
#$4 Highest file id.
#$5 data disk directory.(Where output Te/root  files go, cannot be blank!!!)
#############################################################################
