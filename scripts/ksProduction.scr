#!/bin/bash

#This is the conversion (from kas01.scr) to use at Purdue and Depauw
#Glenn Sembroski 16/05/05
#$0 ./kas02.scr
#$1 For ksall:
#     Telescope-Type-direction specification code. like: WP1Deg,WHe4_1Deg,
#     WG1Deg,VG1DegN0.5Deg.  Giveing a Type code of 'WCR1Deg will cause both 
#     WP1Deg  and WHe4_1Deg to be  run
#   For ksaomVBF and ksarraytriggerVBF:
#     append the threshold specifier: VG1Deg50mv, VG1DegN0.5Deg70mv, 
#     WCR20DegS0.3Deg50mv.
#$2 has which script to run: 
#               ksall:make showers throuth te files
#               ksaom:makes .root files(depreciated)
#               ksaomVBF:makes .vbf files
#               ksaomVBFRoot:makes .vbf and .root files(depreciated)
#               ksarraytriggerVBF:makes .vbf multi trigger files.
#               ksMissingVBF:Looks for missing VBF files.
#$3 StatusRunFileSpecification: Optional: for ksaom only: to model a real run
#          like: /project/veritas/sembrosk/whipple/crab_00-01/gt016235.root
#$3 Array Multiplicity and Trigger multiplicity for ksarraytriggerVBF only. 
#                             Like 12--M2(default)  or 12-4M3 or 123-M2.


#Functions to define thigs for various particle specs

function RemoveOldFiles()
{
  if [ "$kssc" = "ksaom" ] || [ "$kssc" = "ksaomVBFRoot" ]; then
    echo Removing $parspec*GeV*.root files
    cd $datadir
    find . | grep $parspec |grep .root | xargs  -n 1 rm -v 
    cd $lcl
    pwd
  fi

  if [ "$kssc" = "ksaomVBF" ] || [ "$kssc" = "ksaomVBFRoot" ]; then
    echo Removing $parspec'GeV*.vbf' files
    cd $datadir
    find . | grep $parspec'GeV' |grep .vbf | xargs -n 1 rm -v 
    cd $lcl
    pwd
  fi

  if [ "$kssc" = "ksarraytriggerVBF" ]; then
    echo Removing $parspec$Option3'GeV*.vbf' files
    cd $datadir
    find . | grep $parspec$Option3'GeV' |grep .vbf | xargs  -n 1 rm -v 
    cd $lcl
    pwd
    maxMem=75MB
  fi

}


function Protons()
#**********************************************************************
#Veritas Protons
#**********************************************************************
{
    echo Protons: $parspec
    WALLTIME=50:00:00
    if [ "$kssc" != "ksMissingVBF" ]; then
	RemoveOldFiles
    fi

#Veritas$ whipple set1/ksaom/kasall
    let processEnd=36
    enableGEN=([1]=ON   ON   ON   ON   ON   ON   ON   ON   ON   ON  ON    ON  ON  ON    ON    ON    ON   ON  ON  ON  ON  ON  ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON )
       energy=([1]=20   23.9 28.6 34.2 40.9 48.9 58.5 69.9 83.6 100 119.6 143 171 204.5 244.5 292.4 350  418 500 598 715 855 1022 1223 1462 1748 2091 2500 2990 3575 4275 5112 6113 7310 8741 10450)
        start=([1]=1    1    1    1    1    1    1    1    1    1   1     1   1   1     1     1     1    1   1   1   1   1   1    1    1    1    1    1    1    1    1    1    1    1    1    1)
          end=([1]=1382 1007 734  535  390  284  207  151  110  80  59    43  31  23    17    12    9    7   5   4   3   2   2    1    1    1    1    1    1    1    1    1    1    1    1    1)



    if [ $host = 'isis' ]; then
      if [ "$kssc" != "ksMissingVBF" ]; then

#ksaomVBF ~12hr.
	BuildIsisScriptList 1 1 2
	BuildIsisScriptList 2 3 4
	BuildIsisScriptList 3 5 6
	BuildIsisScriptList 4 7 9
	BuildIsisScriptList 5 10 14
	BuildIsisScriptList 6 15 20
	BuildIsisScriptList 7 21 31
	BuildIsisScriptList 8 32 36
#Don't forget about RemoveOldFiles!
 
      else
	BuildIsisScriptList 1  1  $processEnd
      fi
    else
	SubmitAmdahlPBSJobs        #amdahl

    fi
}
#**********************************************************************


function Helium4()
#**********************************************************************
#Veritas  and whipple Helium4
#**********************************************************************
{
    echo Helium4: $parspec
    WALLTIME=50:00:00
    if [ "$kssc" != "ksMissingVBF" ]; then
	RemoveOldFiles
    fi

#Veritas$ whipple set1/ksaom/kasall
    let processEnd=36
    enableGEN=([1]=ON   ON   ON   ON   ON   ON   ON   ON   ON   ON  ON    ON  ON  ON    ON    ON    ON   ON  ON  ON  ON  ON  ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON )
       energy=([1]=20   23.9 28.6 34.2 40.9 48.9 58.5 69.9 83.6 100 119.6 143 171 204.5 244.5 292.4 350  418 500 598 715 855 1022 1223 1462 1748 2091 2500 2990 3575 4275 5112 6113 7310 8741 10450)
        start=([1]=1    1    1    1    1    1    1    1    1    1   1     1   1   1     1     1     1    1   1   1   1   1   1    1    1    1    1    1    1    1    1    1    1    1    1    1)
          end=([1]=519  387  289  215  161  120  90   67   50   37  28    21  16  12    9     7     5    4   3   2   2   2   1    1    1    1    1    1    1    1    1    1    1    1    1    1)

    if [ $host = 'isis' ]; then
      if [ "$kssc" != "ksMissingVBF" ]; then
#set 1 kasaomVBF ~5 hr.
	BuildIsisScriptList 1 6  12
	BuildIsisScriptList 2 13 17
	BuildIsisScriptList 3 18 24
	BuildIsisScriptList 4 25 27
	BuildIsisScriptList 5 28 30
	BuildIsisScriptList 6 31 33
	BuildIsisScriptList 7 34 35
	BuildIsisScriptList 8 36 36

#Don't forget about RemoveOldFiles!
      else
	BuildIsisScriptList 1 1  $processEnd
      fi
    else
	SubmitAmdahlPBSJobs        #amdahl
    fi
}
#**********************************************************************


function Gammas()
#**********************************************************************
#Gammas
#**********************************************************************
{
    echo Gammas: $parspec
    let processEnd=26
    WALLTIME=50:00:00
    if [ "$kssc" != "ksMissingVBF" ]; then
	RemoveOldFiles
    fi

#Veritas set1/ksaom/kasall
#Whipple set1/kasaom/kasall starts at 84 GeV
    let processEnd=36
    enableGEN=([1]=ON   ON   ON   ON   ON   ON   ON   ON   ON   ON  ON    ON  ON  ON    ON    ON    ON   ON  ON  ON  ON  ON  ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON )
       energy=([1]=20   23.9 28.6 34.2 40.9 48.9 58.5 69.9 83.6 100 119.6 143 171 204.5 244.5 292.4 350  418 500 598 715 855 1022 1223 1462 1748 2091 2500 2990 3575 4275 5112 6113 7310 8741 10450)
        start=([1]=1    1    1    1    1    1    1    1    1    1   1     1   1   1     1     1     1    1   1   1   1   1   1    1    1    1    1    1    1    1    1    1    1    1    1    1)
          end=([1]=1032 796  615  474  366  283  218  168  130  100 78    60  46  36    28    22    17   13  10  8   6   5   4    3    3    2    2    1    1    1    1    1    1    1    1    1)
#VeritasSet2
#Don't forget about RemoveOldFiles!
#    enableGEN=([1]=ON   ON   ON   ON   ON   ON   ON   ON   ON   ON    ON    ON    ON  ON    ON    ON    ON   ON  ON  ON  ON  ON  ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON   ON )
#       energy=([1]=21.9 26.2 31.3 37.4 44.7 53.5 64.0 76.5 91.5 109.4 130.8 156.4 187 223.6 267.4 319.8 382  457 547 654 782 935 1118 1337 1599 1912 2286 2734 3269 3909 4675 5590 6685 7994 9559 11430)
#        start=([1]=1    1    1    1    1    1    1    1    1    1     1     1     1   1     1     1     1    1   1   1   1   1   1    1    1    1    1    1    1    1    1    1    1    1    1    1)
#          end=([1]=907  700  540  417  322  248  192  148  114  88    68    53    41  32    25    19    15   12  9   7   6   4   4    3    2    2    2    1    1    1    1    1    1    1    1    1)

    if [ $host = 'isis' ]; then
	if [ ${jobSpec:0:1} = "W" ] ; then
          if [ "$kssc" != "ksMissingVBF" ]; then
	    BuildIsisScriptList 1 11 12
	    BuildIsisScriptList 2 13 14
	    BuildIsisScriptList 3 15 16
	    BuildIsisScriptList 4 17 18
	    BuildIsisScriptList 5 19 20
	    BuildIsisScriptList 6 21 23
	    BuildIsisScriptList 7 24 26
	    BuildIsisScriptList 8 27 28
          else
	    BuildIsisScriptList 1 1  $processEnd
          fi
	fi


	if [ ${jobSpec:0:1} = "V" ] ; then
          if [ "$kssc" != "ksMissingVBF" ]; then
	   #For ksaomVBF ~40 min
	    BuildIsisScriptList 1 1  2
	    BuildIsisScriptList 2 3  4
	    BuildIsisScriptList 3 5  6
	    BuildIsisScriptList 4 7  8
	    BuildIsisScriptList 5 9  10
	    BuildIsisScriptList 6 11 13
	    BuildIsisScriptList 7 14 18
	    BuildIsisScriptList 8 19 36

#Don't forget about RemoveOldFiles!
          else
	    BuildIsisScriptList 1 1  $processEnd
          fi
	fi
    else

	SubmitAmdahlPBSJobs        #amdahl
    fi
}




function SubmitAmdahlPBSJobs()
#**********************************************************************
# Cause pbs jobs to be submitted.
#**********************************************************************
{
 pr=$parspec


 let i=$processStart
 while test $i -le $processEnd
 do
    echo Entry: $i  ${enableGEN[$i]} ${energy[$i]} ${start[$i]} ${end[$i]} ${queues[$i]}
    if [ "${enableGEN[$i]}" == "ON" ]; then 

      pbsFile=$lcl/ks_$i$jobSpec.pbs

      echo "#"PBS -N "pbs"$i'_'$pr                                   >$pbsFile
      echo "#"PBS -e "pbs"$i'_'$pr'.err'                            >>$pbsFile
      echo "#"PBS -o "pbs"$i'_'$pr'.log'                            >>$pbsFile
      echo "#"PBS -m ae                                             >>$pbsFile
      echo "#"PBS -M $user"@purdue.edu"                             >>$pbsFile
      echo "#"PBS -q ${queues[$i]}                                  >>$pbsFile
      echo "#"PBS -l mem=$maxMem                                    >>$pbsFile
      echo "#"PBS -l walltime=$WALLTIME                             >>$pbsFile
      echo "#"PBS -l nodes=1                                        >>$pbsFile
      echo $ksScript ${energy[$i]} $parspec  ${start[$i]} \\   >>$pbsFile
      echo ${end[$i]} $datadir $Option3                   \\   >>$pbsFile
      echo ">>"$lcl"/ksProduction_"$i"_"$pr".log"                   >>$pbsFile
      qsub $pbsFile
    fi

    i=$((i+1))			#do next process
    done
}

function BuildIsisScriptList()
#**********************************************************************
# Causes sub-script list to be created and run
#**********************************************************************
{
 pr=$parspec
 
 jobScript=$lcl'/js'$1'_'$jobSpec'.scr'

 let processStart=$2
 let processEnd=$3


 let i=$processStart
 while test $i -le $processEnd
 do

    if [ "$kssc" != "ksMissingVBF" ]; then
	logFile=">>"$lcl"/ksProduction_"$i"_"$pr".log"
    else
	logFile=' '
    fi
    echo Entry: $i  ${enableGEN[$i]} ${energy[$i]} ${start[$i]} ${end[$i]}
    if [ "${enableGEN[$i]}" == "ON" ]; then 
      echo $ksScript ${energy[$i]} $parspec  ${start[$i]} \\   >>$jobScript
      echo ${end[$i]} $datadir $Option3                   \\   >>$jobScript
      echo $logFile                                            >>$jobScript
    fi
    i=$((i+1))			#do next process
  done
}

# ************************************************************************


#*************************************************************
#Start of main script.
#*************************************************************
lcl="$PWD"
host=$(hostname)
#script directory
sdr=$KASCADEBASE"/scripts"
kssc=$2
ksScript=$sdr/$kssc'.scr' #ksall: Makes seg,pe,pes,te files. Keeps te files
                          #ksaom: Makes .root  files from te files(depreciated)
                          #ksaomVBF: Makes .vbf files from te files
                          #ksarraytriggerVBF: Makes array  .vbf files

let lastJob=8
if [ "$kssc" = "ksMissingVBF" ]; then
    let lastJob=1
fi

if [ $host = 'isis' ] ; then
    dataDirBase=/simulations
    let jobNum=1
 
    while test $jobNum -le $lastJob
    do
	    #define job script name
	JobScript=$lcl'/js'$jobNum'_'$1'.scr'
	    #Initialze the script files
	echo echo Starting $JobScript >$JobScript
    jobNum=$((jobNum+1))
    done
#amdahl
else

    dataDirBase=/project/veritas/sembrosk
fi


Option3=$3 
user=$USER

#Specify queues
#queues=([1]=workq workq workq workq workq workq workq astro astro astro astro  astro astro astro astro astro astro astro astro workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq workq)

#queues=([1]=astro workq astro workq astro workq astro workq astro workq astro  workq astro workq astro workq astro workq astro workq astro workq astro workq  astro workq astro workq astro workq astro workq astro workq astro )

queues=([1]=astro astro astro astro astro astro astro astro astro astro astro  astro astro astro astro astro astro astro astro astro astro astro astro astro  astro astro astro astro astro astro astro astro astro astro astro)

#queues=([1]=astro astro workq astro astro workq astro astro workq astro astro  workq astro astro workq astro astro workq astro astro workq astro astro workq astro astro workq astro astro workq astro astro workq astro astro)


#Fuctions specify which nodes are to be used ("on" or "off")
#Funtions also specify the energy and specify the starting and ending shower 
#IDs.
#See bottom for numbers and energies for gammas,protons and he4

#******************************************************************************
# Set up arrays for node submission and submit
#*****************************************************************************
let pspecset=0
maxMem=240MB
WALLTIME=20:00:00
jobSpec=$1

if [ ${jobSpec:0:1} = "W" ]; then
   dataDirBase=$dataDirBase'/whipple'
fi

if [ ${jobSpec:0:1} = "V" ]; then
   dataDirBase=$dataDirBase'/veritas'
fi

if [ ${jobSpec:1:2} = "CR" ]; then      # Only true for  ksaomVBF 
                                        # and ksarraytriggerVBF
    TelSpec=${jobSpec:0:1}              #gets W from WG20DegN0.5Deg50mv
    spec=${jobSpec#*CR}      #gets 20DegN0.3Deg50mv from WCR20DegN0.3Deg50mv
    let processStart=1
    parspec=$TelSpec'P'$spec #gives WP20DegN0.3Deg50mv from WCR20DegN0.3Deg50mv

    datadir="$dataDirBase/protons"
    Protons
    parspec=$TelSpec'He4_'$spec
    datadir="$dataDirBase/he4"
    Helium4
    let pspecset=1;
fi

if [ ${jobSpec:1:1} = "P" ] ; then 
    parspec=$1 
    datadir="$dataDirBase/protons"

    let processStart=1
    Protons
    let pspecset=1;
fi

if [ ${jobSpec:1:4} = "He4_" ] ; then 
    parspec=$1 
    datadir="$dataDirBase/he4"

    let processStart=1
    Helium4
    let pspecset=1;
fi


if [ ${jobSpec:1:1} = "G" ]; then
    parspec=$1
    datadir="$dataDirBase/gammas"
    let processStart=11
    Gammas
    let pspecset=1;
fi


if [ $pspecset -ne 1 ]; then
    echo No such Particle spec: $1
    exit
fi

if [ $host = 'isis' ] ; then
   
    let jobNum=1

    while test $jobNum -le $lastJob
    do
	    #define job script name
	JobScript=$lcl'/js'$jobNum'_'$jobSpec'.scr'
	if [ "$kssc" != "ksMissingVBF" ]; then
	    JobScriptLog=$lcl'/js'$jobNum'_'$jobSpec'.log'
	    #Initialze the script files
	    chmod 777 $JobScript
	    $JobScript  >$JobScriptLog &
	else
	    #Initialze the script files
	    chmod 777 $JobScript
	    $JobScript 
	fi
    jobNum=$((jobNum+1))
    done
fi

###########################################################################
#Arguments for ksScript
#$1 primary Energy in GeV (integer only)
#$2 Shower type specification string (To be included in config file names and 
#                              in shower names:Like P1W,G1W, He4_1W, G20N0.3V)
#$3 Lowest flie id
#$4 Highest file id.
#$5 data disk directory.(Where output Te/root  files go, cannot be blank!!!)
#$6 PixelStatus Run Fule Name(used by ksAomega only)(can be blank)
#############################################################################
