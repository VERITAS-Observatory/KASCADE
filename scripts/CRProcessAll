#!/bin/bash
#CR (Proton + He4) Production version
#This is for Carver or Hansen or Coates or Edison
#$1: Veritas Base Directory  Ex: $SCRATCH/simulations/veritas
#$2: Zn_AZ and threshold specification EX: 20Deg  (if az=0) or 
#    20_180Deg
#$3: Threshold spec ex 45mv or 50 mv
#$4: Season:teleSpec: Ex WU or SN or WO
#$5: Output file BaseName Ex: CrabA or Noise4 Noise3_5 MDL5UA etc.
#$6: Array Configuration Input Sub-dir: Ex: ABCD
#$7: start direction Index. defualt is 0. !!!Ignored for CR
#$8: end direction Index. defualt is 8.  !!!Ignored for CR
#################################################################################
function usage()
{
  echo '***CRProcessAll usage:'
  echo '   $1 Veritas Base Directory  Ex: $SCRATCH/simulations/veritas'
  echo '   $2:Zn_AZ and threshold specification EX: 20Deg  20_180Deg'
  echo '   $3:Threshold spec ex 45mv or 50mv'
  echo '   $4 Season:teleSpec: Ex: WU or SV SO'
  echo '   $5: Output file BaseName Ex: CrabA or Noise4 or MDL15UA'
  echo '   $6: Input Sub-dir: Ex: ABCD'
  echo '   $7: start direction Index. defualt is 0.(=0.0deg)'
  echo '   $8: end direction Index. defualt is 8.(=2.0deg)'
  echo ' Ex:  ./CRProcessAll $SCRATCH/simulations/veritas 1_225Deg 50mv SO MDL8OA IJKL 1 1'
  echo '***'
}


##################################################################################
#Main
##################################################################################


lcl=$PWD
echo lcl: $lcl

VDIRBASE=$1
ZN_AZDEG=$2
THRESH=$3
SEASARRAY=$4
OUTFILEBASE=$5
ARRAYCONFIG=$6



echo Argument1: $VDIRBASE
echo Argument2: $ZN_AZDEG
echo Argument3: $THRESH
echo Argument4: $SEASARRAY
echo Argument5: $OUTFILEBASE
echo Argument6: $ARRAYCONFIG

if [  ! -n "$6" ]; then
        usage
        exit
fi

##################
# Bring in GenerateVBFName and GetUniqueNumber  functions
##################
if [ ! -e UtilityFunctions.scr ]; then
    cp $KASCADEBASE/scripts/UtilityFunctions.scr ./
fi
source UtilityFunctions.scr


host=$(hostname)
hostString=${host:0:6}
if test  "$hostString" = "edison"  #Are we running on Edison
then
  EDISON=enabled
  QUEUE=serial
  WALLTIME='10:00:00'
  QSUBEXT='.serial'
  MEMREQUEST=' -l vmem=8GB '
  echo '***Edison Cluster***'
fi

hostString=${host:0:6}
if test  "$hostString" = "cvrsvc"  #Are we running on Carver
then
  CARVER=enabled
  QUEUE=serial
  WALLTIME='10:00:00'
  MEMREQUEST=' -l pvmem=8GB '
  echo '***Carver Cluster***'
fi

hostString=${host:0:6}
if test  "$hostString" = "hansen"  #Are we running on Hansen
then
  HANSEN=enabled
  QUEUE=physics
  WALLTIME='10:00:00'
  #QUEUE=standby
  #WALLTIME='04:00:00'
  MEMREQUEST=' -l mem=8GB'
  echo '***Hansen Cluster:'$QUEUE' queue ***'
fi

hostString=${host:0:6}
if test  "$hostString" = "coates"  #Are we running on Coates?
then
  COATES=enabled
  #QUEUE=physics
  #WALLTIME='10:00:00'
  QUEUE=standby
  WALLTIME='04:00:00'
  echo '***Coates Cluster:'$QUEUE' queue ***'
fi

hostString=${host:0:5}
if test  "$hostString" = "conte"  #Are we running on conte
then
  CONTE=enabled
  QUEUE=standby
  WALLTIME='04:00:00'
  MEMREQUEST=' -l mem=8GB'
  echo '***Conte Cluster:'$QUEUE' queue ***'
fi


SeasonSpec=${SEASARRAY:0:1}
Base=$SeasonSpec$OUTFILEBASE
echo Base: $Base

if  [ -z "$ARRAYCONFIG" ]
then
 echo Fatal-Please supply all arguments Ex: ./CRProcessAll $SCRATCH/simulations/veritas 40_180Deg MDL10UA ABCD
 exit
fi

direction=-1      #No wbl

PBase=$SEASARRAY'P'$ZN_AZDEG$THRESH
echo PBase: $PBase
PDir=$PBase'1234M2'$Base                #Add MDL15 to dir name. Needed by ksWeRock
PDirOrig=$PBase'1234M2'$SeasonSpec$ARRAYCONFIG 

echo PDir: $PDir
echo PDirOrig: $PDirOrig

He4Base=$SEASARRAY'He4_'$ZN_AZDEG$THRESH
echo He4Base: $He4Base
He4Dir=$He4Base'1234M2'$Base            #Add MDL15 to dir name. Needed by ksWeRock
He4DirOrig=$He4Base'1234M2'$SeasonSpec$ARRAYCONFIG 

echo He4Dir: $He4Dir
echo He4DirOrig: $He4DirOrig

#################Find protons first ##################
cd $VDIRBASE'/protons/'   #Find our input directory and put it in the right place
pwd                     # with the right name.
mkdir -pv $PDir
if [ -d "$PDirOrig" ]; then
    echo moving ./$PDirOrig'/*' to  './'$PDir'/'
    mvCmd='mv -v ./'$PDirOrig'/*  ./'$PDir'/'
    $mvCmd
    rmdir -v $PDirOrig
fi
cd $VDIRBASE'/protons/'$ARRAYCONFIG
pwd
ls | grep 1234M2 | grep vbf|grep $ZN_AZDEG$THRESH |xargs -n1 mv -v --target=$VDIRBASE'/protons/'$PDir

########## Now He4 #################
cd $VDIRBASE'/he4/'   #Find our input directory and put it in the right place
pwd                     # with the right name.
mkdir -pv $He4Dir
if [ -d "$He4DirOrig" ]; then
    echo moving ./$He4DirOrig'/*' to  './'$He4Dir'/'
    mvCmd='mv -v ./'$He4DirOrig'/*  ./'$He4Dir'/'
    $mvCmd
    rmdir -v $He4DirOrig
fi
cd $VDIRBASE'/he4/'$ARRAYCONFIG
pwd
ls | grep 1234M2 | grep vbf|grep $ZN_AZDEG$THRESH |xargs -n1 mv -v --target=$VDIRBASE'/he4/'$PDir


##############################################################################
# Get the VBF file name: New format
##############################################################################
ARRAY=${SEASARRAY:1:1}A

zn_az=${ZN_AZDEG%%Deg}
ZN=${zn_az%%_*}
if [ "$ZN" = "$zn_az" ]; then
   AZ=0
else
   AZ=${zn_az##*_}
fi

GenerateVBFName "CR" $ARRAY $SeasonSpec $ZN $AZ -1 $OUTFILEBASE  
                                              #CR files have no offset!
echo Output File Name: $VBFFILENAME

##############################################################################

WeRockVBF=$SEASARRAY'CR'$ZN_AZDEG$THRESH
sgeFile=$lcl'/'$Base'CR'$ZN_AZDEG'.pbs'
echo "#"!/bin/bash                                                  >$sgeFile
echo "#PBS -l walltime="$WALLTIME                                  >>$sgeFile
echo "#PBS " $MEMREQUEST                                           >>$sgeFile
if [ -n "$HANSEN" ] || [ -n "$COATES" ] ; then
      echo source /etc/profile                                     >>$sgeFile
      echo module load gcc/4.7.2                                   >>$sgeFile
fi
echo cd $VDIRBASE'/../../veritas'                                  >>$sgeFile
echo './ksWeRock.scr '$WeRockVBF 98020 1234M2 \\                   >>$sgeFile
echo $direction $Base ">"$lcl'/'$Base'CR'$ZN_AZDEG'.log'           >>$sgeFile
echo cd $lcl                                                       >>$sgeFile
echo mv  -v $VDIRBASE'/'$WeRockVBF'1234M2'$Base'.vbf' $VBFFILENAME >>$sgeFile

chmod 700 $sgeFile
qsub$QSUBEXT -q $QUEUE -V -e $sgeFile'.err' -o $sgeFile'.log' $sgeFile 
