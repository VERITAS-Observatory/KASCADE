#$1 Check.log file generated by a call of the type:
#  ./KSAuto.scr G S U 1 0,45,90,135,180 45mv MDL10U ABCD 64954StdCuts.root 
#       >Check.log  with "CheckGeneratedShowerVBFFiles=enabled" enabled.
#  Also works from "./FindBadShowerVBFFiles.scr 70 SUG ABCD >Check.log"
#$2 Telescope ksAomega config: Ex ABCD  or wxyz
#$3 Array season spec U or NA or OA
#From this file we will make a list Missing or short/failed Shower VBF files


function setup()
{
  lcl=$PWD

  host=$(hostname)
  hostString=${host:0:6}
  if test  "$hostString" = "cvrsvc"  #Are we running on Carver
    then
     CARVER=enabled
     CarverQueue=serial
     QUEUE1=$CarverQueue
     QUEUE2=$CarverQueue
     WALLTIME=100:00:00
     echo ***Carver Cluster***
     echo Carver submission not yet implimented
     exit
  fi

  hostString=${host:0:6}
  if test  "$hostString" = "hansen"  #Are we running on Hansen
    then
      HANSEN=enabled
      #QUEUE1=physics
      QUEUE2=standby
      QUEUE1=$QUEUE2
      QUEUE=$QUEUE1
      WALLTIME=30:00:00
      #WALLTIME=04:00:00
  fi
  
  echo hostString: $hostString
  
  if [ -n "$CARVER" ]; then
    dataDirBase=/project/projectdirs/m1304/veritas_CM/simulations
    echo Carver Data Dir: $dataDirBase
    mkdir -vp $dataDirBase
    workingDir=$SCRATCH
  fi

  if [ -n "$HANSEN" ]; then
    dataDirBase=$RCAC_SCRATCH'/simulations'
    echo Hansen Data dir: $dataDirBase
    mkdir -vp $dataDirBase
    workingDir=$RCAC_SCRATCH
  fi

  dataDirBase=$dataDirBase'/veritas'
  mkdir -vp $dataDirBase

  datadir=$dataDirBase'/gammas'

  ####################################################################
  #Make sure ksallVBF.scr is set up correctly to generate Te files
  ####################################################################
  cp $KASCADEBASE/scripts/ksallVBF.scr ksallVBFShowerVBF.scr
  sed '/KascadeEnable=enable/s/Kascade/#Kascade/g' \
                                                <ksallVBFShowerVBF.scr >tmp1
  sed '/LightEnable=enable/s/Light/#Light/g'                <tmp1 >tmp2
  sed '/PeSortMergeEnable=enable/s/PeSort/#PeSort/g'        <tmp2 >tmp1
  sed '/TriggerEnable=enable/s/Trigger/#Trigger/g'          <tmp1 >tmp2
  sed '/#AomegaEnable=enable/s/#Aomega/Aomega/g'            <tmp2 >tmp1
  sed '/#ArrayTrigEnable=enable/s/#Array/Array/g'           <tmp1 >tmp2
  sed '/#Production=enable/s/#Production/Production/g'      <tmp2 >tmp1
  if [ "$TELESPEC" = "OA" ]; then
     sed '/Fall09ArrayPositionsEnable=enable/s/Fall/#Fall/g'  <tmp1 >tmp2
  else
     sed '/#Fall09ArrayPositionsEnable=enable/s/#Fall/Fall/g' <tmp1 >tmp2
  fi
  sed '/#RemoveSingleVBFEnable=enable/s/#Remove/Remove/g'   <tmp2 >tmp1
  sed '/#CleanupEnable=enable/s/#Cleanup/Cleanup/g'         <tmp1 >tmp2
  sed '/#DebugPrintEnable=enable/s/#Debug/Debug/g'          <tmp2 >tmp1
  sed '/#VBFOutputToDetectorSpecDir=enable/s/#VBF/VBF/g'    <tmp1 >tmp2
  sed '/MoonFilterEnable=enable/s/Moon/#Moon/g'   \
                                                   <tmp2 >ksallVBFShowerVBF.scr
  rm tmp1
  rm tmp2
  ####################################################################
}
#############################################################################

function BuildAndSubmitHansenJobsSingly() 
#**********************************************************************
# Cause HANSEN serial jobs to be submitted.
# This version submits 1 job per shower. Useful for high energies.
#**********************************************************************
#$1 energy in GeV
#$2 showerID
#$3 particle spec Ex SUG70Deg2D45mv1234M2ABCD
{

 eGeV=$1     
 showerID=$2

if [ ! -n "$2" ]; then
   echo 'ReDoMissingShowerVBF: Fatal - needs Tel Config (like ABCD)'
   exit
fi
SHWRSPEC=$3

let E=${eGeV%%.*}
 
####################################################################
# assume 45mv threhiold spec
####################################################################

 parspec=${SHWRSPEC%%1234M2*}1234M2

 echo Entry:  $SHWRSPEC $eGeV $showerID
 #Make up the .pbs file name
 sgeFile=$lcl'/K'$eGeV'd'$showerID$SHWRSPEC.pbs

 #Build the pbs file
 if [ "$E" -gt "20000" ]; then
   echo "#"PBS -q $QUEUE1                                >$sgeFile
   #echo "#"PBS -l walltime=10:00:00                      >>$sgeFile
   echo "#"PBS -l walltime=04:00:00                      >>$sgeFile
#   echo "#PBS -l nodes=1:ppn=6"                          >>$sgeFile
   echo "#PBS -l mem=35GB"                               >>$sgeFile
 else
   echo "#"PBS -q $QUEUE2                                >$sgeFile
   echo "#"PBS -l walltime=04:00:00                     >>$sgeFile
   echo "#PBS -l mem=35GB"                              >>$sgeFile
#   echo "#PBS -l nodes=1:ppn=6"                         >>$sgeFile
 fi
 echo source /etc/profile                               >>$sgeFile
 echo module load gcc/4.7.2                             >>$sgeFile
 echo $lcl'/ksallVBFShowerVBF.scr '$eGeV $SHWRSPEC \\   >>$sgeFile
 echo $showerID $showerID $datadir $workingDir \\       >>$sgeFile
 echo ">>"$lcl"/ksProduction_"$eGeV'd'$showerID$SHWRSPEC".log" >>$sgeFile

 chmod 700 $sgeFile
 
 #if [ -n QsubFileNameList ]; then
 #   echo 'echo Done >'$sgeFile'.Done'                     >>$sgeFile
 #   echo $sgeFile >>$QsubFileNameList
 #  else
  
 qsub -V -e k$eGeV'd'$showerID$SHWRSPEC.err -o k$eGeV'd'$showerID$SHWRSPEC.log $sgeFile 

 #  fi

}
#**********************************************************************

####################
#Start of main code
####################
if [ ! -n "$3" ]; then
   echo Missing arguments:
   echo Ex:> ./ReDoMissingShowerVBFFile.scr  FileNotfoundFile  ABCD OA
   exit
fi

CheckFile=$1
TELCONFIG=$2
TELESPEC=$3
setup
pwd 


#######################################################
#Just want the "File Not Found" lines.
#######################################################

grep "File Not found:" $CheckFile >tmp1

#######################################################
#Now we will parse these lines to end up with a file with
#all the info we need to create a .pbs file and submit it.
#A line in the file will look like:
# "File Not found: SUG70Deg2D45mv1234M2GeV52265.d10.vbf"
#######################################################

  sed '/File Not/s/1234M2GeV/1234M2'$TELCONFIG' /g' <tmp1     >tmp2
  sed '/File Not/s/\.d/  /g'                         <tmp2     >tmp1
  sed '/File Not/s/\.vbf/  /g'                       <tmp1     >tmp2
  sed '/File Not/s/File Not found\:/  /g'           <tmp2     >tmp1

##############################################################
#Read in the file we just created and cause the job to be submited
##############################################################
let count=0
{  
  while read SHWRSPEC  energy  showerID
    do
       if [ $count -gt 995 ]; then
         echo 'ReDoMisingShowerVBFFile--Over 995 te file creation submisions to '$QUEUE ' queue. Not gonna do any more!'
         exit
       fi
       
       BuildAndSubmitHansenJobsSingly $energy $showerID $SHWRSPEC  
       count=$((count+1))
    done
}<tmp1

echo $count ' ShowerVBF file creation submissions'


