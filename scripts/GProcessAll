#This is for Carver or Hansen
#$1 is PSF subdir  Ex: V330 or V190
#$2:Zn_AZ and threshold specification EX: 20Deg  (if az=0) or 
#   20_180Deg
#$3:Threshold spec ex 45mv or 50 mv
#$4 Season:teleSpec: Ex WU or SV
#$5: Output file BaseName Ex: CrabA or Noise4 Noise3_5 MDL15 etc.
#$6: Input Sub-dir: Ex: ABCD
#$7: start direction Index. defualt is 0. 
#$8: end direction Index. defualt is 8. 
#####################################################################

function usage()
{
  echo '***GProcessAll usage:'
  echo '   $1 is PSF subdir  Ex: V330 or V190'
  echo '   $2:Zn_AZ and threshold specification EX: 20Deg  20_180Deg'
  echo '   $3:Threshold spec ex 45mv or 50mv'
  echo '   $4 Season:teleSpec: Ex WU or SV SO'
  echo '   $5: Output file BaseName Ex: CrabA or Noise4 or MDL15NA'
  echo '   $6: Input Sub-dir: Ex: ABCD'
  echo '   $7: start direction Index. defualt is 0.(=0.0deg)'
  echo '   $8: end direction Index. defualt is 8.(=2.0deg)'
  echo ' Ex:  ./GProcessAll V330 1_225Deg 50mv SO MDL8OA IJKL 1 1'
  echo '***'
}

#####################################################################
#Main script
##############

if [  ! -n "$6" ]; then
        usage
        exit
fi




lcl=$PWD
echo lcl: $lcl

echo Argument1: $1
echo Argument2: $2
echo Argument3: $3
echo Argument4: $4
echo Argument5: $5
echo Argument6: $6
echo Argument7: $7
echo Argument8: $8


host=$(hostname)
hostString=${host:0:6}
if test  "$hostString" = "cvrsvc"  #Are we running on Carver
then
  CARVER=enabled
  QUEUE=serial
  WALLTIME='10:00:00'
  MEMREQUEST='pvmem=8GB'
  echo '***Carver Cluster***'
fi

hostString=${host:0:6}
if test  "$hostString" = "hansen"  #Are we running on Hansen
then
  HANSEN=enabled
  #QUEUE=physics
  #WALLTIME='30:00:00'
  QUEUE=standby
  WALLTIME='04:00:00'
  MEMREQUEST='mem=8GB'
  echo '***Hansen Cluster:'$QUEUE' queue ***'
fi

hostString=${host:0:6}
if test  "$hostString" = "coates"  #Are we running on Hansen
then
  COATES=enabled
  #QUEUE=physics
  #WALLTIME='30:00:00'
  QUEUE=standby
  WALLTIME='04:00:00'
  MEMREQUEST='mem=8GB'
  echo '***Coates Cluster:'$QUEUE' queue ***'
fi

ABase=$4
SeasonSpec=${ABase:0:1}
Base=$SeasonSpec$5
echo Base: $Base

if  [ -z "$6" ]
then
 echo Fatal-Please supply all arguments Ex: ./GProcessAll V190 40_180Deg Noise3_5 ABCD  

 exit
fi

if  [ -z "$7" ] ; 
then
  let i=0;
else
  let i=$7
fi
pwd
if  [ -z "$8" ] ; 
then
  let end=8;
else
  let end=$8
fi


echo i start: $i
echo end: $end

GBase=$ABase'G'$2'2D'$3
echo GBase: $GBase

GDir=$GBase'1234M2'$Base  #Add MDL15 to dir name. Needed by ksWeRock
GDirOrig=$GBase'1234M2'$SeasonSpec$6
echo GDir: $GDir
echo GDirOrig: $GDirOrig



cd $lcl'/gammas/'
pwd
mkdir -pv $GDir
if [ -d "$GDirOrig" ]; then
    echo moving ./$GDirOrig'/*' to  './'$GDir'/'
    mvCmd='mv -v ./'$GDirOrig'/*  ./'$GDir'/'
    $mvCmd
    rmdir -v $GDirOrig
fi


cd $lcl'/gammas/'$6
pwd


ls | grep 1234M2 | grep vbf|grep $2'2D'$3 |xargs -n1 mv -v --target=$lcl'/gammas/'$GDir



while test $i -le $end
 do
    direction=$i
    if test $direction = '0'
    then
       wbl=0.0Wbl
    fi
    if test $direction = '1'
    then
       wbl=S0.25Wbl
    fi
    if test $direction = '2'
    then
      wbl=S0.5Wbl 
    fi
    if test $direction = '3'
    then
       wbl=S0.75Wbl
    fi
    if test $direction = '4'
    then
       wbl=S1.0Wbl
    fi
    if test $direction = '5'
    then
       wbl=S1.25Wbl
    fi
    if test $direction = '6'
    then
       wbl=S1.5Wbl
    fi
    if test $direction = '7'
    then
       wbl=S1.75Wbl
    fi
    if test $direction = '8'
    then
       wbl=S2.0Wbl
    fi

    VBFFile=$ABase'G'$5$2'2D'$wbl$3'1234M2.vbf'

    sgeFile=$lcl'/'$Base'G'$2$wbl'.pbs'
    echo "#"!/bin/bash                                            >$sgeFile
    echo "#PBS -l walltime="$WALLTIME                            >>$sgeFile
    echo "#PBS -l "$MEMREQUEST                                    >>$sgeFile
    echo date                                                    >>$sgeFile
    echo cd $lcl'/../../veritas'                                 >>$sgeFile
    echo './ksWeRock.scr '$GBase 98020 1234M2  \\                >>$sgeFile
    echo $direction $Base ">"$lcl'/'$Base'G'$2$wbl'.log'         >>$sgeFile
    echo cd $lcl                                                 >>$sgeFile
    echo mv  -v $GBase'1234M2D'$direction$Base'.vbf' $VBFFile    >>$sgeFile
    echo date                                                    >>$sgeFile

    chmod 700 $sgeFile
    qsub -q $QUEUE -V -e $sgeFile'.err' -o $sgeFile'.log' $sgeFile 

    i=$((i+1))			#do next directoion
done
