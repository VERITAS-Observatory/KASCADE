#$1 Check.log file generated by a call of the type:
#  ./KSAuto.scr G S U 1 0,45,90,135,180 45mv MDL10U ABCD 64954StdCuts.root 
#       >Check.log  with "CheckGeneratedTeFiles=enabled" enabled.
#$2 Threshold: 45mv or 50mv 
##From this file we will make a list Missing Te file
#$3  Particle type  "G" or :"E"

function usage()
{
 echo '***ReDoMissingTeFile usage:'
 echo '   $1: File with Missing Te Files in form: File Not found: SOG1_135Deg2DGeV36550te.d8'
 echo '   $2: Threshold: 45mv or 50mv'
 echo '   $3: Particle type  "G" or :"E" Defaults to G
 echo ' EX: ./ReDoMissingTeFile.scr CheckTeMDL8OAIJKL1_0-135From.log   50mv E'
 echo '***'
}

function setup()
{
  lcl=$PWD

  host=$(hostname)
  hostString=${host:0:6}
  if test  "$hostString" = "cvrsvc"  #Are we running on Carver
    then
     CARVER=enabled
     CarverQueue=serial
     QUEUE1=$CarverQueue
     QUEUE2=$CarverQueue
     WALLTIMEH=30:00:00
     WALLTIMEL=$WALLTIMEH
     MEM=pvmem
     echo ***Carver Cluster***
  fi

  hostString=${host:0:6}
  if test  "$hostString" = "hansen"  #Are we running on Hansen
    then
      HANSEN=enabled
      QUEUE1=physics
      QUEUE2=standby
      QUEUE=$QUEUE1
      WALLTIMEH=30:00:00
      WALLTIMEL=04:00:00
      MEM=mem
  fi

  hostString=${host:0:6}
  if test  "$hostString" = "coates"  #Are we running on Coates?
    then
      COATES=enabled
      QUEUE1=physics
      QUEUE2=standby
      QUEUE=$QUEUE1
      WALLTIMEH=30:00:00
      WALLTIMEL=04:00:00
      MEM=mem
  fi
  
  echo hostString: $hostString
  
  if [ -n "$CARVER" ]; then
    dataDirBase=$SCRATCH/simulations
    #dataDirBase=/project/projectdirs/m1304/veritas_CM/simulations
    echo Carver Data Dir: $dataDirBase
    mkdir -vp $dataDirBase
    workingDir=$SCRATCH
  fi

  if [ -n "$HANSEN" ]; then
    dataDirBase=$SCRATCH'/simulations'
    echo Hansen Data dir: $dataDirBase
    mkdir -vp $dataDirBase
    workingDir=$SCRATCH
  fi

  if [ -n "$COATES" ]; then
    dataDirBase=$SCRATCH'/simulations'
    echo Coates Data dir: $dataDirBase
    mkdir -vp $dataDirBase
    workingDir=$SCRATCH
  fi

  dataDirBase=$dataDirBase'/veritas'
  mkdir -vp $dataDirBase

  if [ "$ParticleType" = "G" ]; then
     datadir=$dataDirBase'/gammas'
  else
     if [ "$ParticleType" = "E" ]; then
        datadir=$dataDirBase'/electrons'
     fi
   fi

  ####################################################################
  # Bring in ksallVBF and make sure its set up right
  cp $KASCADEBASE/scripts/ksallVBF.scr ksallVBFReDoTE.scr
  sed '/#KascadeEnable=enable/s/#Kascade/Kascade/g' <ksallVBFReDoTE.scr >tmp1
  sed '/#LightEnable=enable/s/#Light/Light/g'                     <tmp1 >tmp2
  sed '/#PeSortMergeEnable=enable/s/#PeSort/PeSort/g'             <tmp2 >tmp1
  sed '/#TriggerEnable=enable/s/#Trigger/Trigger/g'               <tmp1 >tmp2
  sed '/AomegaEnable=enable/s/Aomega/#Aomega/g'                   <tmp2 >tmp1
  sed '/ArrayTrigEnable=enable/s/Array/#Array/g'                  <tmp1 >tmp2
  sed '/#Production=enable/s/#Production/Production/g'            <tmp2 >tmp1
  sed '/#RemoveSingleVBFEnable=enable/s/#Remove/Remove/g'         <tmp1 >tmp2
  sed '/#CleanupEnable=enable/s/#Cleanup/Cleanup/g'               <tmp2 >tmp1
  sed '/#DebugPrintEnable=enable/s/#Debug/Debug/g'                <tmp1 >tmp2
  sed '/#VBFOutputToDetectorSpecDir=enable/s/#VBF/VBF/g'          <tmp2 \
                                                           >ksallVBFReDoTE.scr
  rm tmp1
  rm tmp2
  ####################################################################
 

}
#############################################################################

function BuildAndSubmitJobsSingly() 
#**********************************************************************
# Cause  serial jobs to be submitted.
# This version submits 1 job per shower. Useful for high energies.
#**********************************************************************
#$1 energy in GeV
#$2 showerID
#$3 particle spec Ex SuG20_180Deg2D
{
 if [ ! -n "$2" ]; then
  echo Missing arguments
  exit
 fi

 eGeV=$1     
 showerID=$2
 pr=$3

 let E=${eGeV%%.*}
 

 parspec=$pr$THR'1234M2'

 echo Entry:  $parspec $eGeV $showerID
 
#Make up the .pbs file name
 sgeFile=$lcl'/K'$eGeV'd'$showerID$pr.pbs

 #Build the pbs file
 if [ "$E" -gt "20000" ]; then
   echo "#"PBS -q $QUEUE1                                      >$sgeFile
   echo "#"PBS -l walltime=$WALLTIMEH                         >>$sgeFile
   echo "#PBS -l "$MEM"=30GB"                                 >>$sgeFile
 else
   echo "#"PBS -q $QUEUE2                                      >$sgeFile
   echo "#"PBS -l walltime=$WALLTIMEL                         >>$sgeFile
   echo "#PBS -l "$MEM"=30GB"                                 >>$sgeFile
 fi
 echo source /etc/profile                                     >>$sgeFile
 echo module load gcc/4.7.2                                   >>$sgeFile
 echo $lcl'/ksallVBFReDoTE.scr '$eGeV $parspec $showerID \\   >>$sgeFile
 echo $showerID $datadir $workingDir \\                       >>$sgeFile
 echo ">>"$lcl"/ksProduction_"$eGeV'd'$showerID$parspec".log" >>$sgeFile

 chmod 700 $sgeFile
 
 #Submit the pbs file
 qsub -V -e k$eGeV'd'$showerID$parspec.err -o k$eGeV'd'$showerID$parspec.log $sgeFile 
}

#**********************************************************************
#Main program
########################################################################
if [  ! -n "$2" ]; then
	usage
	exit
fi

CheckFile=$1
THR=$2

if [ -n "$3" ]; then
  ParticleType=$3
else
  ParticleType='G'
fi



setup

#######################################################
#Just want the "File Not Found" lines.
#######################################################

grep "File Not found:" $CheckFile >tmp1



#######################################################
#Now we will parse these lines to end up with a file with
#all the info we need to create a .pbs file and submit it.
#A line in the file will look like:"File Not found: SUG1_45Deg2DGeV28.6te.d51"
#######################################################

  sed '/File Not/s/2DGeV/2D /g'                  <tmp1     >tmp2
  sed '/File Not/s/te.d/  /g'                    <tmp2     >tmp1
  sed '/File Not/s/File Not found\:/  /g'   <tmp1     >tmp2



##############################################################
#Read in the file we just created and cause the job to be submited
##############################################################
let count=0
{  
  while read pr  energy  showerID
    do
       if [ $count -gt 995 ]; then
         echo 'ReDoMisingTeFile--Over 995 te file creation submisions to '$QUEUE ' queue. Not gonna do any more!'
         exit
       fi
       
       BuildAndSubmitJobsSingly $energy $showerID $pr  
       count=$((count+1))
    done
}<tmp2
echo $count ' Te file creation submissions'


