#!/bin/bash
#This script is used to automate the generation of the MDL7 (best guess)
#ksAomega config files from the V190*Ratios.dat files (in SV).
# it has several part which will be added to as things go on.
#It has some arguments listed below.
# ************************************************************************
#$1 MDL spec: Ex: MDL7   :Used to name $Array.dat file that has MDL values (like MDL3$Array.dat)
#$2 String used to specify which ratios.dat file we are using Ex "Upgrade" or
#  "NewArray" or "OldArray0809 "
 
#$3 Name of TTree capable Param file( Gain/F:Rate:PVar:Max3 ) 
#   Ex: UpgradeParams.txt or V190Run63559G2.0.txt
#$4 Telescope 4 character spec: Ex: ABCD or wxyz
#$5 Reference real data Stage2 or later root file(in lcl dir): Ex: 63559.root
#$6 Zn_AZ; Example 20_180Deg or 30Deg


                                      # dm=dummy
BulidRatiosTxtFile=enabled           #needs dm $2 
DetermineMDL=enabled                #needs $1 $2 $3
#BuildMDLAomeagaConfig=enabled        #needs $1 $2 dm $4 $5
#ProductionMDLCR=enabled              #needs $1 $2 dm $4 $5 $6 :makes showerVBF
#ProcessMDLCR=enabled                 #needs $1 $2 dm $4 dm $6 :makes vbf, .root

MDLLast=MDL12

 
lcl=$PWD
###################################
# We are assumed to be in SV
###################################

if [ "$2" = "Upgrade" ]; then
  PMT='U'
  PSF='V190'
  Array='U'
fi
if [ "$2" = "OldArray0809" ]; then
  PMT='V'
  PSF='V330'
  Array="OA"
fi
if [ "$2" = "NewArray" ]; then
  PMT='V'
  PSF='V190'
  Array="NA"
fi    

RatiosFileBase=$PSF$2'Ratios'
DatFile=$RatiosFileBase'.dat'
TxtFile=$RatiosFileBase'.txt'

ZnAz=$6
MDLLast=$MDLLast$Array

echo MDLLast: $MDLLast

###########################################################################

function checkRunningJobs()
{
  RunningList=RunningList$2'.dat'
  SingleRunList=singleRunList$2'dat'

  if [ -s $RunningList ]; then
      rm $RunningList
  fi
  {
    while  read jobID;  do
      qstat $jobID &>$SingleRunList
      cat $SingleRunList | grep -v Unknown >>$RunningList
    done
  } <$1

  rm $SingleRunList
  if [ -s  $RunningList ]; then
    return 1
  else
      rm $RunningList
    return 0
  fi
}
############################################################################


############################################################################
#Bulid the Ratios.Txt File from the Ratios.dat file for use as input to the 
#next DetermineMDL step. Its assumed that all  MDL entries will be in the
# .dat file
#Needs $2 only
host=$(hostname)
echo host: $host

hostString=${host:0:6}
if test  "$hostString" = "cvrsvc"  #Are we running on Carver
then
  CARVER=enabled
  VDirBase='/project/projectdirs/m1304/veritas_CM/simulations/veritas/'
  JobIDHost='cvrsvc'
  QUEUE=serial
  echo '***Carver Cluster***'
fi

hostString=${host:0:6}
if test  "$hostString" = "hansen"  #Are we running on Hansen
then
  HANSEN=enabled
  VDirBase=$SCRATCH'/simulations/veritas/'
  JobIDHost='hansen-adm'
  QUEUE=physics
  #QUEUE=standby
  echo ***Hansen Cluster***
fi

hostString=${host:0:6}
if test  "$hostString" = "coates"  #Are we running on Coates?
then
  HANSEN=enabled
  VDirBase=$SCRATCH'/simulations/veritas/'
  JobIDHost='coates-adm'
  QUEUE=physics
  #QUEUE=standby
  echo ***Coates Cluster***
fi

if [ -n "$BulidRatiosTxtFile" ]; then
  echo '##########################################################'
  echo '# BulidRatiosTxtFile '
  echo '##########################################################'

  cd $lcl

  echo "t/I:T/F:N:Eff:G:R:PVar:S:NumPix:Max3_50:Max3:LRatio" >temp1.txt
  {
    while read line
      do
       echo Line: "$line"
       if [ -n "$line" ]; then
         MDL=${line##*$MDLLast}          #See if the line the highest MDL in it.
         if [ "$MDL" != "$line" ]; then
           foundMDL="found"
           echo foundMDL 
         fi
  #We are at or after the MDLLast first instance
	 if [ -n "$foundMDL" ]; then
           if [ "${line:0:1}" = "T" ]; then
             echo $line >>temp1.txt
           fi
         fi
       fi
      done 
  } <$DatFile
  sed '/T1/s/T1/1/g' <temp1.txt >temp2.txt  #remove T's
  sed '/T2/s/T2/2/g' <temp2.txt >temp1.txt
  sed '/T3/s/T3/3/g' <temp1.txt >temp2.txt
  sed '/T4/s/T4/4/g' <temp2.txt >temp1.txt
  sed '/,/s/,/ /g'   <temp1.txt >$TxtFile
fi



######################################################################
if [ -n "$DetermineMDL" ]; then
  echo '##########################################################'
  echo '# DetermineMDL '
  echo '##########################################################'
  # Using the determineParams.C root macro make the MDL parameter set
  # Save to $1$Array.dat file
  ################################################################

  cd $lcl

  if [ !  -e "determineParameters.C" ]; then
      cp -v $KASCADEBASE/scripts/determineParameters.C .
  fi

  echo "{"                                                  >MDLAuto.rootscr
  echo "gROOT->ProcessLine(\".L determineParameters.C\");" >>MDLAuto.rootscr
  echo "determineParameters(\""$TxtFile"\",\""$3"\");"     >>MDLAuto.rootscr
  echo "}"                                                 >>MDLAuto.rootscr

  ~/Switch.rootrcTo.rootrc_glenn.scr
  root -q -b MDLAuto.rootscr  >MDLAuto.rootscr.log

  echo
  echo
  echo "MDLAuto: "$1" parameters found and placed in "$1".dat:"
  echo

  ############################################################
  # Parse the root log file to make the MDL7 Ratioos.dat file entry
  #  Will be used to make the ksAomega confifg files.
  ############################################################
  grep T1 MDLAuto.rootscr.log >$1$Array.dat
  grep T2 MDLAuto.rootscr.log >>$1$Array.dat
  grep T3 MDLAuto.rootscr.log >>$1$Array.dat
  grep T4 MDLAuto.rootscr.log >>$1$Array.dat

  cat $1$Array.dat
fi
######################################################################

if [ -n "$BuildMDLAomeagaConfig" ]; then
  echo '##########################################################'
  echo '# BuildMDLAomeagaConfig '
  echo '##########################################################'
  echo 'MDLAuto: Generating ksAomega config files from '$1'.dat'

  cd $KASCADEBASE/inputs

  tConfig=$4
  T1=${tConfig:0:1}
  T2=${tConfig:1:1}
  T3=${tConfig:2:1}
  T4=${tConfig:3:1}
  ../bin/ksAomega -save_config_and_exit=Base.config

  ##############################################################
  # now update each file with sed commands
  ##############################################################
 
  ################################################################
  #Read in the $1.txt file and set params
  ################################################################
  echo 'MDLAuto: Setting ksAomegaV50('$4').config files to '$1'.dat values'

  if [ "$2" != "Upgrade" ]; then
     PFile=/project/projectdirs/astrogfs/veritas_data/glenn/data/veritas/1FGLJ0515.9+1528/54008.root
  else
     PFile=$lcl'/'$5
  fi
{
   while read tel threshold noise eff gain 
    do
    sed '/DiscriminatorThreshold/s/10/'$threshold'/g' <Base.config  >tmp1.config
    sed '/NoiseRate/s/12.5/'$noise'/g'                <tmp1.config  >tmp2.config
    sed '/Efficiency/s/1/'$eff'/g'                    <tmp2.config >tmp1.config
    sed '/DigitalCountsPerPE/s/4.2/'$gain'/g'         <tmp1.config >tmp2.config
    sed '/Telescope "T1"/s/T1/'$tel'/g'               <tmp2.config >tmp1.config
    sed '/PixelStatsFileName " "/s:" ":"'$PFile'":g'  <tmp1.config >tmp2.config
    sed '/LightConeConcentration/s/0.35/0.45/g'       <tmp2.config >tmp1.config
    sed '/BadPixelSupression/s/ON/OFF/g'              <tmp1.config >tmp2.config
    if [ "$2" = "Upgrade" ]; then
      sed '/SinglePeRiseTimeNS/s/0/1.7/g'             <tmp2.config >tmp1.config
      sed '/SinglePeFallTimeNS/s/0/4.75/g'            <tmp1.config >tmp2.config
    else
      sed '/SinglePeRiseTimeNS/s/0/3.2/g'             <tmp2.config >tmp1.config
      sed '/SinglePeFallTimeNS/s/0/8.5/g'             <tmp1.config >tmp2.config
    fi
    sed '5 a \#This is special for tel '$tel'.'   tmp2.config >$tel'.config'    
   done
  }<$lcl'/'$1".dat"

  mv  T1.config ksAomegaV50mv$T1'.config'
  mv  T2.config ksAomegaV50mv$T2'.config'
  mv  T3.config ksAomegaV50mv$T3'.config'
  mv  T4.config ksAomegaV50mv$T4'.config'
  cd $lcl
fi
############################################################################


if [ -n "$ProductionMDLCR" ]; then
  echo '##########################################################'
  echo '# ProductionMDLCR '
  echo '##########################################################'
  echo 'MDLAuto: Process ksAomega*.config: ' $4 ' through ksAomega and ksArrayTrig'
  #echo 'MDLAuto: This takes about 10 min so be patient. '
  echo 'MDLAuto:  use "less MDLProcess.log" or qstat  to monitor progress.'
  cd $lcl
  date
  #make up our ksProduction designation
  Spec='W'$PMT'CR'$6'50mv1234M2'$4

  ./ksProduction.scr $Spec ksallVBF.scr >MDLProcess$4'.log'

  ########################################################################
  # We are now going to wait for all of these to finish.
  ########################################################################

  echo "MDLAuto: Submission of ksProduction to make shower VBF files on "
  if [ -n "$HANSEN" ]; then
    echo "MDLAuto: Hansen cluster for "$ZnAz" complete."
  fi
  if [ -n "$COATES" ]; then
    echo "MDLAuto: Coates cluster for "$ZnAz" complete."
  fi
  if [ -n "$CARVER" ]; then
    echo "MDLAuto: Carver cluster for "$ZnAz" complete."
  fi
  echo "MDLAuto: Sleeping until they all finish. About 3 hrs"
  
      # Cleanup the log file to only have cCarver cluster pids in it
  cat MDLProcess$4'.log' | grep  $JobIDHost >ShowerMakeVBF$4'.log'

  let runsNotDone=1
  while test $runsNotDone -eq 1 
  do
    sleep 300s
    checkRunningJobs ShowerMakeVBF$4'.log'  $4
    let runsNotDone=$?
  done
  echo "MDLAuto: Te file generation complete"
#Should all be done now. Check that it worked(add that later)
fi
###########################################################################

if [ -n "$ProcessMDLCR" ]; then
  echo '##########################################################'
  echo '# ProcessMDLCR '
  echo '##########################################################'
  echo 'MDLAuto: Process '$4'through ksWeRock and VEGAS 1,2,4,5'

  #########################################################################
  #Now run these showers through CRProcessAllC to make VBF files and 
  # process through stage5.
  #########################################################################
  cd $lcl
   ./CRProcessAllC V190 $6'50mv'  W$1 $4 $PMT
fi

