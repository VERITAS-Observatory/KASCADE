#This is a short utility script to do all the things between running
#See the KASCADE wiki: Running at Purdue: 
#This is explictily for the VERITAS VBF analysis.
#Takes about ~ 1:30.
#$1 particle ID (VG20DegS0.5Deg50mv) Required
#$2 Run Number  (95001, 90020)       Required 
#$3 Arrayconfig/Multiplicity  (12--M2 123-M2 1234M3) Not required:
#$4 (or $3:see below) Direction index. If $3 has no 'M' in it then $3 is 
#   considered the direction index and $4 is ignored.


echo 1:Looking for any errors generated by running ksProduction.scr
$KASCADEBASE/scripts/ksLogErrors.scr
echo 2:No errors found if this follows 1:

inpDir=$KASCADEBASE'/inputs'
#step 2.2

Spec=$1
let SpecEnd=$(expr length $Spec)
SpecEnd=$((SpecEnd-1))

host=$(hostname)
if [ $host = 'isis' ] ; then
    dataDirBase=/simulations
else

    dataDirBase=/project/veritas/sembrosk
fi

if [ ${Spec:0:1} = "V" ] ; then
	dataDirBase=$dataDirBase'/veritas'
fi

if [ ${Spec:0:1} = "W" ] ; then
	dataDirBase=$dataDirBase'/whipple'
fi

cd $dataDirBase

if [ ! -d "workingDir" ]; then
       mkdir -p workingDir
fi
cd workingDir

#use combo of process id ($$)and number of nanosec(date +%N) since last 
#second tick to get unique value. (least count is micro sec at best)
let dirID=$(date +10#%N)+$$     # The 10# prevents leading 0's causeing errors
while [ -d "$dirID" ]; do
  let dirID=$(date +10#%N)+$$
done

#create working directory.
mkdir  $dirID
cd $dirID

AC=$3                      #Check to see if $3 is an array configuration

if [ ${AC:4:1} != "M" ]; then
    if [ -n '$3' ]; then
	DirIndexOption='-DirectionIndex='$3
    fi
else
    ArConfig=$3
    if [ -n '$4' ]; then
	DirIndexOption='-DirectionIndex='$4
    fi
fi	




if [ ${Spec:1:1} = "G" ]  ; then

    find $dataDirBase/gammas -name $Spec$ArConfig'GeV*.vbf'  >GList
    gawk 'gsub(/.vbf/,"",$1)' GList >ShowerList

fi

if [ ${Spec:1:2} = "CR" ] ; then

   TelSpec=${Spec:0:1}
   Pspec=$TelSpec'P'${Spec#*CR} #gets 20DegN0.3Deg50mv from WCR20DegN0.3Deg50mv
				#with P. see pg 97 Bash book.
   He4spec=$TelSpec'He4_'${Spec#*CR} #Replace CR with He4_

   find $dataDirBase/protons -name $Pspec$ArConfig'GeV*.vbf'  >CRList
   find $dataDirBase/he4 -name $He4spec$ArConfig'GeV*.vbf'    >>CRList
   gawk 'gsub(/.vbf/,"",$1)' CRList  >ShowerList  
fi

#step 2.3

#Setup unique random seed file
cp -v $inpDir/ksKascade.ran ksSumFiles.ran #Copy in a file to overwrite
let seedK=$(date +10#%N)+$$      #Add in process id ($$),10# prevents error

$KASCADEBASE/bin/randomCreateRanluxSeed -s $seedK -o ksSumFiles.ran
	                    #date +%N  +$$ gives Number of nanoseconds from 
			    #last second  + process id.

#This is special LookUpTable version
#       $KASCADEBASE/bin/ksSumFiles -EnableSpectrumWeighting \
#	                            -RunNumber=$2 \
#                                   -DistributeEnergy \
#                                   -OutputVBFFileName=$Spec$ArConfig.vbf ShowerList 

#This is normal version 
     $KASCADEBASE/bin/ksSumFiles -EnableSpectrumWeighting  \
	                   -RunNumber=$2 \
                       	   -OutputVBFFileName=$dataDirBase/$Spec$ArConfig.vbf \
			   $DirIndexOption \
                           ShowerList 

#Cleanup
cd ..
rm -vrf $dirID
