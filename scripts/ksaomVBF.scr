#!/bin/bash
#This runs production ksAomega LINUX. Arguments are:
#$0 ./kasaom.scr
#$1 primary Energy in gev (integer only)
#$2 Shower type specification string (To be included in config file names and 
#                                     in shower namesLike P1W,G1W, He4_1W)
#$3 Lowest flie id
#$4 Highest file id.
#$5 data disk directory.(Where output Te are and root and VBF files are to go,
# cannot be blank!!!)
#$6 PixelStatus Run Fule Name(used by ksAomega only)(can be blank)
echo "**********************************************************************"
echo "**********************************************************************"

echo $0 $1 $2 $3 $4 $5 $6
if [ -n "$6" ]; then
    StatsFileNameOption="-PixelStatsFileName="$6
else
    StatsFileNameOption=" "
fi
echo StatsFileNameOption: $StatsFileNameOption

src=$KASCADEBASE'/bin'
echo binary src dir is $src

inpDir=$KASCADEBASE'/inputs'
echo inputs dir is $inpDir

host=$(hostname -s)
while [ -z "$host" ]; 
  do
    echo "Failed to get hostname. Retrying"
    host=$(hostname -s)
done
echo Running on $host

#Set up private working directory for this run. 
#Keeps random number independent

#use combo of process id ($$)and number of nanosec(date +%N) since last 
#second tick to get unique value. (least count is micro sec at best)
let dirID=$(date +10#%N)+$$     # The 10# prevents leading 0's causeing errors
while [ -d "$dirID" ]; do
  let dirID=$(date +10#%N)+$$
done

cd workingScratch

#create working directory.
mkdir  $dirID
cd $dirID

wrkdir="$PWD"
echo Working Directory is $wrkdir


#Make links to config files
ksAomegaConfig=ksAomega$2'.config'
ln -s $inpDir/$ksAomegaConfig $ksAomegaConfig

#make a links to the various input files:
ln -s $inpDir/PSTMultiplicity3.bin PSTMultiplicity3.bin

#All auxillary files are in wrkdir.
#All temp data kept in $wrkdir. 
#Final results go into $5;
#Make sure directory exists, if not create it.
if [ -z "$5" ]; then
    echo "ksall:Data Directory must be specified"
    exit
fi
if [ ! -d "$5" ]; then
       mkdir -p $5
fi

#Setup unique random seed file into working dir.
cp -v $inpDir/ksAomega.ran ksAomega.ran  #Copy in a file to overwrite
let seedK=$(date +10#%N)+$$      #Add in process id ($$),10# prevents error

$src/randomCreateRanluxSeed -s $seedK -o ksAomega.ran
	                    #date +%N  +$$ gives Number of nanoseconds from 
			    #last second  + process id.
#Set up ouput base name of showers. 
#Note it includes data path which better not be blank
Shwr=$5'/'$2'GeV'$1

#Setup input base name
Spec=$2
let specEnd=$(expr length $Spec)
specEnd=$((specEnd-1))
TelCode=${Spec:$specEnd:1}

SpecIn=${Spec%Deg*}             #Drops last 'Deg' and anything that follows
SpecIn=$SpecIn$TelCode          #Tack back on the V or W


ShwrIn=$5'/'$SpecIn'GeV'$1


#Setup to loop over showers
i="$3"
while test $i -le $4
  do
#ksAomega
    teFile=$ShwrIn'te.d'$i
    rootFile=$Shwr'.d'$i'.root'
    VBFFile=$Shwr'.d'$i'.vbf'

#    $src/ksAomega -config=$ksAomegaConfig -RandomSeedFileName=ksAomega.ran -RootOutputFileName=$rootFile -VBFOutputFileName=$VBFFile $StatsFileNameOption $teFile 
   $src/ksAomega -config=$ksAomegaConfig -RandomSeedFileName=ksAomega.ran -VBFOutputFileName=$VBFFile $StatsFileNameOption $teFile
		   
    i=$((i+1))			#do next shower
done



#Cleanup
cd $wrkdir
rm -vf *
cd ..
rmdir $dirID




