# -----------------------------------------------------------------------------
#
# KASCADE common makefile definitions
# 
# Original Author: Glenn Sembroski (via Stephan Fegan (via Gernot Mayer))
# $Author$
# $Date$
# $Revision$
# $Tag$
#
# -----------------------------------------------------------------------------
# Set environmental variable in .profile or .bashrc, etc. to identity
# fortran compiler. To use AbSoft 10 fortran, ABSOFTV10_FORTRAN must be defined
# as an environmental variable. Default is Intel fortran.
#   for ABSOFT V10 compiler, export ABSOFTV10_FORTRAN=<something>
#   We also need to be aware of differing  versions of the 
#   libstdc++. For now do this by hand. 
# -----------------------------------------------------------------------------
# Standard directories
# -----------------------------------------------------------------------------

OPTIMIZATION=ON


SRCDIR = src
INCDIR = include
BINDIR = bin
LIBDIR = lib
EXPDIR = examples
DOCDIR = doc
TMPDIR = out

TOPCOMMONDIR = $(TOPDIR)/common
TOPCOMMONINCDIR = $(TOPCOMMONDIR)/$(INCDIR)
TOPCOMMONLIBDIR = $(TOPCOMMONDIR)/$(LIBDIR)


#Define VEGAS in .bashrc (or wherever)

# -----------------------------------------------------------------------------
#  VEGAS  defines
# -----------------------------------------------------------------------------
VEGASCMNINCDIR = -I$(VEGAS)/common/include
VEGASCMNLIBDIR = -L$(VEGAS)/common/lib
VEGAGCMNLIB = -lSP24commonLite
VEGASLDFLAGS = $(VEGASCMNLIBDIR) $(VEGAGCMNLIB)



# -----------------------------------------------------------------------------
# KASCADE DEFINES AND INCLUDES
# -----------------------------------------------------------------------------

KASINCFLAGS = -I$(TOPCOMMONINCDIR) -Iinclude -I.
KASLIBFLAGS = -L$(TOPCOMMONLIBDIR) -Llib
KASLDFLAGS = $(KASLIBFLAGS)
KASLIBS =   -lKascadeCommon
KASLIBSROOT = -lKascadeCommonRoot

# -----------------------------------------------------------------------------
# VBF
# -----------------------------------------------------------------------------

VBFBIN := $(VBFSYS)/bin/

VBFCONFIG = $(VBFBIN)vbfConfig
VBFCFLAGS   := $(shell $(VBFCONFIG) --cppflags)
VBFLDFLAGS  := $(shell $(VBFCONFIG) --ldflags)
VBFLIBS     := $(shell $(VBFCONFIG) --libs)

# -----------------------------------------------------------------------------
# Root
# -----------------------------------------------------------------------------
ifdef ROOTSYS
ROOTBIN := $(ROOTSYS)/bin/
else
ROOTBIN :=
endif

ROOTCONFIG = $(ROOTBIN)root-config
ROOTCFLAGS   := $(shell $(ROOTCONFIG) --cflags)
ROOTLDFLAGS  := 
ROOTLIBS     := $(shell $(ROOTCONFIG) --libs)
ROOTGLIBS    := $(shell $(ROOTCONFIG) --glibs)

ROOTCINT = $(ROOTBIN)rootcint
ROOTCINTFLAGS = $(KASINCFLAGS) -D__extension__="" -D__attribute__\\\(X\\\)="" -D__const=const -D__restrict="" -D__signed=signed -D__volatile=volatile -D__BEGIN_DECLS= -D__END_DECLS= -D__THROW=

#Set up place where F90 Modules will be made and kept.

F90MODULES = $(INCDIR)

#CCLIB=-L/usr/lib -lstdc++ -lU77
CCLIB=-L/usr/lib -lstdc++

ALLDIR = $(SRCDIR) $(INCDIR) $(BINDIR) $(LIBDIR) $(DOCDIR) $(TMPDIR)

CXX           = g++

#Set up for fortran type.
ifdef ABSOFTV10_FORTRAN
  # -------------------------------------------------------------------------
  #Using ABSOFT Fortran:
  # -------------------------------------------------------------------------
  #Standrd absoft and gcc access to stdc++
  CLDFLAGS = -L/usr/lib -lstdc++
  F77  :=f77 
  F90  :=f90
  #Absoft Flags for version 10.0 fortran compiler
  F90FLAGS := -g -O -c -s -YEXT_NAMES=LCS $(KASINCFLAGS) $(VHDF5INCFLAGS) \
  	-p $(TOPCOMMONDIR)
  F77FLAGS := -g -O -V  -W  -f -C  -c -s $(KASINCFLAGS) $(VHDF5INCFLAGS)
endif

ifdef PGIFORTRAN
  # -------------------------------------------------------------------------
  #Using Portland Group Fortran:
  # -------------------------------------------------------------------------
  #F77  :=pgf77 
  F77  :=pgf90 
  F90  :=pgf90
  #PGI Flags 
  F90FLAGS := -g -O2 -C -c -Mextend -Msave -Munixlogical -Mnoupcase  \
	$(KASINCFLAGS)
  F77FLAGS := -g -O2 -C -c -Mextend -Msave -Munixlogical -Mnoupcase  \
	$(KASINCFLAGS) 
	 
  CLDFLAGS = -Mnomain -g77libs  -L/usr/lib -lstdc++

#L$(dir $(shell $(CXX) -print-libgcc-file-name)) -lstdc++
endif

ifdef INTELFORTRAN
  # -------------------------------------------------------------------------
  #Default: Using Intel Fortran:
  # -------------------------------------------------------------------------
  F77  =ifort
  F90  =ifort
  LSTDC=
#Intel ifort Flags
  F90FLAGS =  -g -O  -lowercase -save -zero -c -nus $(KASINCFLAGS) \
     -module $(TOPCOMMONDIR)
  F77FLAGS =  -g -O  -132 -lowercase -save -zero -c -nus  $(KASINCFLAGS)

  #Intel access to stdc++
  #Note: When building, the Intel Compiler doesn't know what version of the 
  #libstdc++ to use (ie which version of g++ was used to compile other things), 
  #thus, that has to be explicitly given in the Library path to the 
  #libstdc++.so 
  #library. Also, if the  main program is not fortran we have to tell 
  #ifort that.

  CLDFLAGS = -nofor_main -L$(dir $(shell $(CXX) -print-libgcc-file-name)) \
             -lstdc++ 

endif

ifdef GNUFORTRAN
  # -------------------------------------------------------------------------
  #Using GNU gfortran for F77 and f90 compiles
  # -------------------------------------------------------------------------
  F77  :=gfortran 
  F90  :=gfortran
  #gfortran Flags 
  F90FLAGS := -g -O2 -c -ffixed-line-length-none -fno-automatic \
              -fno-underscoring -fbounds-check  -I$(TOPCOMMONDIR) \
              $(KASINCFLAGS)
  F77FLAGS := -g -O2 -c  -ffixed-line-length-none -fno-automatic \
              -fno-underscoring -fbounds-check  $(KASINCFLAGS)

#  CXX = gcc-3.3

  CLDFLAGS = -L$(dir $(shell $(CXX) -print-libgcc-file-name)) \
             -lstdc++ 
endif


ifdef OPTIMIZATION
	ARCHCFLAGS    = -Wall -g -fPIC -O3
else
	ARCHCFLAGS    = -Wall -g -fPIC
endif

LD            = g++
ARCHLDFLAGS   =  
ARCHSOFLAGS   = -shared



#CFLAGS   = $(ARCHCFLAGS) -D_OAWG -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE  \
#	-D_REENTRANT $(KASINCFLAGS) $(INCHDF5) $(VHDF5INCFLAGS) $(ROOTCFLAGS)
CFLAGS   = $(ARCHCFLAGS) -D_OAWG -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE  \
	-D_REENTRANT $(KASINCFLAGS) $(ROOTCFLAGS) -D__STDC_LIMIT_MACROS \
        -D__STDC_CONSTANT_MACROS

LDFLAGS = $(ARCHLDFLAGS) $(HDF5LDFLAGS) $(CCLIB) -lU77 
 




INSTALLCMD = install -m 755 
RM = rm -f
